%!PS-Adobe-3.0 EPSF-3.0
%%Title: (Acr498.tmp)
%%Version: 1 5
%%Creator: Adobe Acrobat 6.0
%%CreationDate: 15:30:38 04/27/07
%%DocumentData: Clean7Bit
%%BoundingBox: 0 0 186 252
%%HiResBoundingBox: 0.0 0.0 186.0 252.0
%%Pages: 0
%%DocumentProcessColors: Black
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - general image support) 1.2 0
%%+ procset (Adobe Acrobat - monochrome image support) 1.2 0
%%+ procset (Adobe Acrobat - color image support) 1.2 0
%%+ procset (Adobe Acrobat - indexed color image support) 1.2 0
%%EndComments
%%BeginProlog
%%EndProlog
%%BeginSetup
%ADOPrintSettings: L1 W0 VM op crd os scsa T h ef bg ucr sf ef r b fa pr SEPS ttf hb Printer/PostScript Color Management 0
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.19 0
%%Copyright: Copyright 1987-2003 Adobe Systems Incorporated.
%%Version: 1.19 0
systemdict /languagelevel known dup
	{ currentglobal false setglobal }
	{ false }
ifelse
exch
userdict /Adobe_CoolType_Utility 2 copy known
	{ 2 copy get dup maxlength 25 add dict copy }
	{ 25 dict }
ifelse put
Adobe_CoolType_Utility
	begin
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch /eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{ globaldict begin currentglobal true setglobal }
if
	/ct_AddStdCIDMap
		ct_Level2?
			{ {
			((Hex) 57 StartData
			0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
			7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
			d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
			cc36 74f4 1144 b13b 77) 0 () /SubFileDecode filter cvx exec
			} }
			{ {
			<BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
			4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A> eexec
			} }
		ifelse bind def
userdict /cid_extensions known
dup { cid_extensions /cid_UpdateDB known and } if
	 {
	 cid_extensions
	 begin
	 /cid_GetCIDSystemInfo
		 {
		 1 index type /stringtype eq
			 { exch cvn exch }
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				 {
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					 {
					 1 index load
					 3 index get
					 dup null eq
						  { pop pop cid_UpdateDB }
						  {
						  exch
						  1 index /Created get eq
							  { exch pop exch pop }
							  { pop cid_UpdateDB }
						  ifelse
						  }
					 ifelse
					 }
					 { pop cid_UpdateDB }
				 ifelse
				 }
				 { cid_UpdateDB }
			 ifelse
			 end
		 } bind def
	 end
	 }
if
ct_Level2?
	{ end setglobal }
if
	/ct_UseNativeCapability?  systemdict /composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring () def
		/usewidths? true def
		end def
	ct_Level2? { setglobal } { pop } ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict /languagelevel known
				{ pop /CIDFont findresource /GlyphDirectory get }
				{
				1 index /CIDFont findresource /GlyphDirectory
				get dup type /dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			} def
		/+
			{
			systemdict /languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{ 1 dict begin }
			ifelse
			/$ exch def
			systemdict /languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			? { $ begin } if
			} def
		/? { $ type /dicttype eq } def
		/| {
			userdict /Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data /AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					  begin
						AddWidths?
								{
								Adobe_CoolType_Data /CC 3 index put
								? { def } { $ 3 1 roll put } ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont /Widths get exch CC exch put
								}
								{ ? { def } { $ 3 1 roll put } ifelse }
							ifelse
					end
				end
				}
				{ ? { def } { $ 3 1 roll put } ifelse }	ifelse
				}
				{ ? { def } { $ 3 1 roll put } ifelse }
			ifelse
			} def
		/!
			{
			? { end } if
			systemdict /languagelevel known
				{ gvm setglobal }
			if
			end
			} def
		/: { string currentfile exch readstring pop } executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		 /c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		 /c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		 /c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		 /c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		 /c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		 /c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		 /c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		 /c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		 /cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		 /cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		 /cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		 /cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		 /cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx [.001 0 0 .001 0 0] def
		/ct_1000Mtx [1000 0 0 1000 0 0] def
		/ct_raise {exch cvx exch errordict exch get exec stop} bind def
		/ct_reraise
			{ cvx $error /errorname get (Error: ) print dup (						  ) cvs print
					errordict exch get exec stop
			} bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			} bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility /ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{ dup string /dst_string exch def }
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex  get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string  dst_index 2 index putinterval
						length dst_index add /dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string  dst_index 2 index putinterval
						pop dup dst_index add /dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							  { arrayIndex get }
							  {
							  pop
							  exit
							  }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			} bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{ /unknowninstancename /Category resourcestatus }
			stopped
				{ cleartomark setglobal true }
				{ cleartomark currentglobal not exch setglobal }
			ifelse
				{
					{
					mark 3 1 roll /Category findresource
						begin
						ct_Vars /vm currentglobal put
						({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec
							{ cleartomark false }
							{ { 3 2 roll pop true } { cleartomark false } ifelse }
						ifelse
						ct_Vars /vm get setglobal
						end
					}
				}
				{ { resourcestatus } }
			ifelse bind def
			/CIDFont /Category ct_resourcestatus
				{ pop pop }
				{
				currentglobal  true setglobal
				/Generic /Category findresource
				dup length dict copy
				dup /InstanceType /dicttype put
				/CIDFont exch /Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit /ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				  /Registry (Adobe) def
				  /Ordering (Identity) def
				  /Supplement 0 def
				end def
				/CMapName /Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000> <FFFF>
				endcodespacerange
				1 begincidrange
				<0000> <FFFF> 0
				endcidrange
				endcmap
				CMapName currentdict /CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont  10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{ pop pop /defineresource /undefined ct_raise }
				ifelse
				} bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{ get 3 1 roll pop pop}
						{ pop pop /findresource /undefinedresource ct_raise }
					ifelse
					}
					{ pop pop /findresource /undefined ct_raise }
				ifelse
				} bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{ pop pop /findresource /undefined ct_raise }
				ifelse
				} bind def
			/ct_resourcestatus /resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup (Binary) eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{ cid_BYTE_COUNT () /SubFileDecode filter }
							stopped
								{ pop pop pop }
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup (Hex) eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{ null exch /ASCIIHexDecode filter /readstring }
							stopped
								{ pop exch pop (>) exch /readhexstring }
							if
							}
							{ (>) exch /readhexstring }
						ifelse
						load
						exit
						}
					if
					/StartData /typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch /GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop /readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				} bind def
			/StartData
				{
				mark
					{
					currentdict
					dup /FDArray get 0 get /FontMatrix get
					0 get 0.001 eq
						{
						dup /CDevProc known not
							{
							/CDevProc 1183615869 internaldict /stdCDevProc 2 copy known
								{ get }
								{
								pop pop
								{ pop pop pop pop pop 0 -1000 7 index 2 div 880 }
								}
							ifelse
							def
							}
						if
						}
						{
						 /CDevProc
							 {
							 pop pop pop pop pop
							 0
							 1 cid_temp /cid_CIDFONT get
							 /FDArray get 0 get
							 /FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							 } def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup /cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup /SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup /SubrMapOffset undef
										dup /SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{ pop }
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict /CIDFont defineresource pop
					end end
					}
				stopped
					{ cleartomark /StartData ct_reraise }
				if
				} bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit /ProcSet ct_resourcestatus
				{ true }
				{ /CIDInitC /ProcSet ct_resourcestatus }
			ifelse
				{
				pop pop
				/CIDInit /ProcSet findresource
				ct_UseNativeCapability?
					{ pop null }
					{ /CIDInit ct_CIDInit /ProcSet defineresource pop }
				ifelse
				}
				{ /CIDInit ct_CIDInit /ProcSet defineresource pop null }
			ifelse
			ct_Vars exch /ct_oldCIDInit exch put
			} bind def
		/ct_restoreCIDInit
			{
			ct_Vars /ct_oldCIDInit get dup null ne
				{ /CIDInit exch /ProcSet defineresource pop }
				{ pop }
			ifelse
			} bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility /ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{ pop 0 }
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{ get }
								{ pop pop nullstring }
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{ 0 FDBytes ct_cvnsi }
									{ pop 0 }
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{ /charstring nullstring def exit }
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			} def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			} def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont /Widths get cid
					2 copy known
						{ get exch pop aload pop }
						{ pop pop stringwidth }
					ifelse
					}
					{ stringwidth }
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			} def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{ get }
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup /FontMatrix 2 copy known
						{ get }
						{ pop pop ct_defaultFontMtx }
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont /Widths get def
					/CharStrings 1 dict dup /.notdef
						<d841272cf18f54fc13> dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup /CharStrings get 1 index /Encoding get
			ct_dfCharCode get charstring put
			rootfont /WMode 2 copy known
				{ get }
				{ pop pop 0 }
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ ct_str1 show }
			ifelse
			} def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup /FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ ct_1000Mtx matrix concatmatrix concat }
				{ pop }
			ifelse
			/Private get
			Adobe_CoolType_Utility /ct_Level2? get not
				{
				ct_dfDict /Private
				3 -1 roll
					{ put }
				1183615869 internaldict /superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility /ct_Level2? get
				{ 1 index }
				{ 3 index /Private get mark 6 1 roll }
			ifelse
			dup /RunInt known
				{ /RunInt get }
				{ pop /CCRun }
			ifelse
			get exec
			Adobe_CoolType_Utility /ct_Level2? get not
				{ cleartomark }
			if
			} bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility /ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{ stop }
			if
			end
			end
			end
			end
			} bind def
		/BaseFontNameStr (BF00) def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix  [0.001 0 0 0.001 0 0] def
			/FontBBox  [-250 -250 1250 1250] def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix  [0.001 0 0 0.001 0 0] def
			/FontBBox  [-250 -250 1250 1250] def
			/Encoding ct_cHexEncoding def
			/BuildChar /ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString /ct_Type3ShowCharString load def
				/ct_dfSetCacheProc /ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup /lenIV 4 put def
				/CharStrings 1 dict dup /.notdef <d841272cf18f54fc13> put def
				/PaintType 0 def
				/ct_ShowCharString /ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{ exit }
				if
				}
			for
			exch pop exch pop
			} bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch /WMode exch def
				exch /FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup /FontMatrix known
				{ dup /FontMatrix get /FontMatrix exch def }
				{ /FontMatrix matrix def }
			ifelse
				/bfCount 1 index /CIDCount get 256 idiv 1 add
					dup 256 gt { pop 256} if def
				/Encoding
					256 array 0 1 bfCount 1 sub { 2 copy dup put pop } for
					bfCount 1 255 { 2 copy bfCount put pop } for
					def
				/FDepVector bfCount dup 256 lt { 1 add } if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont /FontBBox known
						{ CIDFont /FontBBox get /FontBBox exch def }
					if
					CIDFont /CDevProc known
						{ CIDFont /CDevProc get /CDevProc exch def }
					if
					currentdict
					end
				BaseFontNameStr 3 (0) putinterval
				0 1 bfCount dup 256 eq { 1 sub } if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup /CIDFirstByte exch 256 mul def
						FontType 3 eq
							{ /ct_FDDict 2 dict def }
						if
						currentdict
						end
					1 index  16
					BaseFontNameStr  2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{ /Widths 1 index /CIDFont get /GlyphDirectory get length dict def }
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont /Widths get
						begin
						exch /CIDFont get /GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{ exch pop }
			ifelse
			} bind def
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{
				2 index /CMap ct_resourcestatus
					{ pop pop exch pop }
					{
					/CIDInit /ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch /WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry (Adobe) def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-) search
									{
									pop pop
									(-) search
										{
										dup length string copy
										exch pop exch pop
										}
										{ pop (Identity)}
									ifelse
									}
									{ pop  (Identity)  }
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000> <FFFF>
							endcodespacerange
							1 begincidrange
							<0000> <FFFF> 0
							endcidrange
							endcmap
							CMapName currentdict /CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get /CIDFont findresource
				ct_makeocf
				}
			ifelse
			} bind def
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index /CMap ct_resourcestatus
					{ pop pop }
					{
					/CIDInit /ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry (Adobe) def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-) search
							{
							pop pop
							(-) search
								{ dup length string copy exch pop exch pop }
								{ pop (Identity) }
							ifelse
							}
							{ pop (Identity) }
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000> <FFFF>
					endcodespacerange
					1 begincidrange
					<0000> <FFFF> 0
					endcidrange
					endcmap
					CMapName currentdict /CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get /CIDFont findresource
				ct_makeocf
				}
			ifelse
			} bind def
		currentdict readonly pop
		end
	end
%%EndResource
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars 6.0 1
%%Copyright: Copyright 1987-2002 Adobe Systems Incorporated. All Rights Reserved.
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 162 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/undefineRes/findRes/setSA/pl
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil 6.0 1
%%Copyright: Copyright 1993-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: procset l2compat 6.0 1
%%Copyright: Copyright 1987-2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Level 1 emulation of level 2 operators
/setcmykcolor isdefined? not
{
/setcmykcolor {
1 sub 4 1 roll
3 {
3 index add neg dup 0 lt { pop 0 } if
3 1 roll
} repeat
setrgbcolor
pop
} bd
} if
/rectclip isdefined? not
{
/rectclip { newpath re clip newpath } bd
} if
/rectfill isdefined? not
{
/rectfill { gsave newpath re fill grestore } bd
} if
/sethalftone isdefined? not
{
/sethalftone {
begin
HalftoneType 1 eq
{ Frequency Angle /SpotFunction load setscreen }
if
end
} bd
} if
Level1?
{
/pdf_show {show} bd
/xshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xshow
} bd
/yshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_yshow
} bd
/xyshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xyshow
} bd
} if
/getrampcolor {
cvi
/indx exch def
[
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
]
L1setcolor
} bd
/sssetbackground { L1setcolor } bd
%%EndResource
%%BeginResource: procset pdf 6.0 1
%%Copyright: Copyright 1998-2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/sg /setgray ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_image {{image} /DataSource pdf_dictOp} bd
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
MaskDict /DataSource get dup type /filetype eq { closefile } { pop } ifelse
end
} [/miDict /DataDict /_Filters] bld
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
c1x c2x eq
{
c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope c2y c1y sub c2x c1x sub div def
/theta slope 1 atan def
c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if
c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
c1x c1y translate
theta rotate
-90 rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
/max { 2 copy gt { pop } {exch pop} ifelse } bind def
/min { 2 copy lt { pop } {exch pop} ifelse } bind def
rampdict begin
40 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
c1x c1y translate
theta rotate
-90 rotate
/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
/c1y 0 def
/c1x 0 def
/c2x 0 def
ext0 {
0 getrampcolor
c2y r2 add r1 sub 0.0001 lt
{
c1x c1y r1 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2y r1 add r2 le
{
c1x c1y r1 0 360 arc
fill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r1 neg def
/p1y c1y def
/p2x r1 def
/p2y c1y def
p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y p1x SS1 div neg def
/SS2 90 theta sub dup sin exch cos div def
/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y p2x SS2 div neg def
r1 r2 gt
{
/L1maxX p1x yMin p1y sub SS1 div add def
/L2maxX p2x yMin p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
ext1 {
c2y r2 add r1 lt
{
c2x c2y r2 0 360 arc
fill
}
{
c2y r1 add r2 sub 0.0001 le
{
c2x c2y r2 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r2 neg def
/p1y c2y def
/p2x r2 def
/p2y c2y def
p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y c2y p1x SS1 div sub def
/SS2 90 theta sub dup sin exch cos div def
/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y c2y p2x SS2 div sub def
r1 r2 lt
{
/L1maxX p1x yMax p1y sub SS1 div add def
/L2maxX p2x yMax p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
grestore
grestore
end
end
end
} ifelse
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
/currentdistillerparams where { pop currentdistillerparams /CoreDistVersion get 5000 lt}{true}ifelse
{
/PDFMark5 {cleartomark} bd
}
{
/PDFMark5 {pdfmark} bd
}ifelse
/ReadByPDFMark5
{
2 dict begin
/makerString exch def string /tmpString exch def
{
currentfile tmpString readline pop
makerString anchorsearch
{
pop pop cleartomark exit
}
{
3 copy /PUT PDFMark5 pop 2 copy (\n) /PUT PDFMark5
} ifelse
}loop
end
}bd
%%EndResource
%%BeginResource: procset sep_ops 6.0 1
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Support for Separations in Level 1, following the conventions of Tech Note 5044
userdict /sep_ops 50 dict dup begin put
/bdef {bind def} bind def
/xdef {exch def} bdef
/colorimagebuffer {
0 1 2 index length 1 sub {
dup 2 index exch get 255 exch sub 2 index 3 1 roll put
} for
} bdef
/addprocs {
[ 3 1 roll
/exec load
dup 3 1 roll
] cvx
} bdef
/L1? {
systemdict /languagelevel known {
systemdict /languagelevel get 2 lt
}{
true
} ifelse
} bdef
/colorexists {
statusdict /processcolors known {
statusdict /processcolors get exec
}{
/deviceinfo where {
pop deviceinfo /Colors known {
deviceinfo /Colors get
statusdict /processcolors {
deviceinfo /Colors known {
deviceinfo /Colors get
}{
1
} ifelse
} put
}{
1
} ifelse
}{
1
} ifelse
} ifelse
1 gt
} bdef
/colorplate colorexists { 0 } { 5 } ifelse def
/negativecolorplate false def
/setcmykcolor where {
pop
gsave
1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
4 {4 copy} repeat
grestore
1 dict begin
/foureq {
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
pop pop pop pop and and and
} def
1 0 0 0 foureq {/colorplate 1 store} if
0 1 0 0 foureq {/colorplate 2 store} if
0 0 1 0 foureq {/colorplate 3 store} if
0 0 0 1 foureq {/colorplate 4 store} if
0 0 0 0 foureq {/colorplate 6 store} if
end
} if
0 systemdict /currenttransfer get exec exec
1 systemdict /currenttransfer get exec exec
2 copy
eq
{
/colorplate 6 store
pop
/negativecolorplate exch 0.5 lt store
}
{
gt /negativecolorplate exch store
}
ifelse
/findcmykcustomcolor where { pop }
{
/findcmykcustomcolor {
[ 6 1 roll ] readonly
} bdef
} ifelse
/setoverprint where {
pop
}{
/setoverprint {
pop
} bdef
} ifelse
/currentoverprint where {
pop
}{
/currentoverprint {
false
} bdef
} ifelse
/setcustomcolor where {
pop
}{
L1? {
/setcustomcolor {
exch
aload pop pop
4 { 4 index mul 4 1 roll } repeat
5 -1 roll pop
setcmykcolor
} bdef
}{
/setcustomcolor {
exch
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace setcolor
} bdef
} ifelse
} ifelse
/ik 0 def
/iy 0 def
/im 0 def
/ic 0 def
/imagetint {
ic .3 mul
im .59 mul
iy .11 mul
ik add add add dup
1 gt {pop 1} if
} bdef
/setcmykcolor where {
pop
}{
/setcmykcolor {
/ik xdef /iy xdef /im xdef /ic xdef
imagetint
1 exch sub setgray
} bdef
} ifelse
/customcolorimage where {
pop
}{
L1? {
/customcolorimage{
gsave
colorexists {
aload pop pop
/ik xdef /iy xdef /im xdef /ic xdef
currentcolortransfer
{ik mul ik sub 1 add} addprocs
4 1 roll {iy mul iy sub 1 add} addprocs
4 1 roll {im mul im sub 1 add} addprocs
4 1 roll {ic mul ic sub 1 add} addprocs
4 1 roll setcolortransfer
/magentabuf 0 string def
/yellowbuf 0 string def
/blackbuf 0 string def
{
colorimagebuffer dup length magentabuf length ne
{
dup length dup dup
/magentabuf exch string def
/yellowbuf exch string def
/blackbuf exch string def
} if
dup magentabuf copy yellowbuf copy
blackbuf copy pop
} addprocs
{magentabuf}{yellowbuf}{blackbuf} true 4 colorimage
}{
aload pop pop /ik xdef /iy xdef /im xdef /ic xdef /tint
imagetint def
currenttransfer
{tint mul 1 tint sub add} addprocs settransfer image
} ifelse
grestore
} bdef
}{
/customcolorimage {
gsave
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace
10 dict begin
/ImageType 1 def
/DataSource exch def
/ImageMatrix exch def
/BitsPerComponent exch def
/Height exch def
/Width exch def
/Decode [1 0] def
currentdict end
image
grestore
} bdef
} ifelse
} ifelse
/setseparationgray where {
pop
}{
L1? {
/setseparationgray { 1 exch sub dup dup dup setcmykcolor } bdef
}{
/setseparationgray {
[/Separation /All /DeviceCMYK {dup dup dup}] setcolorspace
1 exch sub setcolor
} bdef
} ifelse
} ifelse
/separationimage where { pop }
{
/separationimage {
gsave
1 1 1 1 (All)
findcmykcustomcolor customcolorimage
grestore
} bdef
} ifelse
currentdict readonly pop end
%%EndResource
%%BeginResource: procset pdflev15044 6.0 1
%%Copyright: Copyright 1987-2002 Adobe Systems Incorporated. All Rights Reserved.
%%Title: PDF operators, Level 1, with emulated separations (TN 5044)
/_ColorSep5044? true dd
/docinitialize {
PDF begin
/_defaulthalftone
/currenthalftone where
{ pop currenthalftone }
{ 4 dict dup begin
currentscreen
/SpotFunction exch def
/Angle exch def
/Frequency exch def
/HalftoneType 1 def
end }
ifelse
dd
/currentcolortransfer where
{ pop /_defaultcolortransfer [ currentcolortransfer ] dd }
{ /_defaultcolortransfer [currenttransfer dup dup dup] dd }
ifelse
end
} bd
/initialize {
/overprintstack null dd
sep_ops begin
50 dict begin
_defaulthalftone sethalftone
} bd
/terminate {
end end
} bd
/currentcolortransfer where
{ pop }
{
/setcolortransfer
{
settransfer pop pop pop
} bd
} ifelse
/pl {
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} bd
/m { _sa? { pl } if moveto } bd
/l { _sa? { pl } if lineto } bd
/c
{
_sa? {3 {pl 6 2 roll} repeat} if
curveto
} bd
/ri/pop ld
/setSA { /_sa? xdd } bd
/re
{
_sa?
{
8 dict begin
/:h exch def
/:w exch def
/:y exch def
/:x exch def
:x :y pl
/:ymin exch def /:xmin exch def
:x :w add :y :h add pl
/:ymax exch def /:xmax exch def
:xmin :ymin moveto
:xmax :ymin lineto
:xmax :ymax lineto
:xmin :ymax lineto
closepath
end
}
{
4 2 roll moveto
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
closepath
} ifelse
} bd
/q
{
gsave
[currentoverprint overprintstack] /overprintstack xdd
}
[/overprintstack] bld
/Q
{
overprintstack aload pop /overprintstack xdd setoverprint
grestore
}
[/overprintstack] bld
/AlmostFull?
{ dup maxlength exch length sub 2 le
} bd
/Expand
{ 1 index maxlength mul cvi dict
dup begin exch { def } forall end
} bd
/xput
{ 3 2 roll
dup 3 index known not
{ dup AlmostFull? { 1.5 Expand } if
} if
dup 4 2 roll put
} bd
/defineRes
{ _categories 1 index known not
{ /_categories _categories 2 index 10 dict xput store
} if
_categories exch 2 copy get 5 -1 roll 4 index xput put
} bd
/undefineRes {
null exch
defineRes
} bd
/findRes {
_categories exch get exch get
} bd
/L1setcolor {
aload length
dup 0 eq
{ pop .5 setgray }
{ dup 1 eq
{ pop setgray }
{ 3 eq
{ setrgbcolor }
{ setcmykcolor }
ifelse }
ifelse }
ifelse
} bind dd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
colorplate 0 eq
{
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} if
colorplate 1 ge colorplate 4 le and
{
4 colorplate sub index 4 { exch pop } repeat
concatandsettransfer
} if
colorplate 5 ge
{
0 index 4 { exch pop } repeat
concatandsettransfer
} if
} bd
/tn5044sethalftone
{
begin
HalftoneType 5 eq
{ [/Default /Cyan /Magenta /Yellow /Black /Default /Default /Default]
colorplate get
here not {
/Default here not { currentdict } if
} if
}
{ currentdict }
ifelse
end
begin
/TransferFunction here
{
concatandsettransfer
currentdict dup length dict
begin
{
1 index /TransferFunction ne { def } { pop pop } ifelse
} forall
currentdict
end
}
{
currentdict
} ifelse
end
sethalftone
} bd
/paintimage
{
colorplate 0 eq
{
{ {currentfile cyanstr readstring pop}
{currentfile magentastr readstring pop}
{currentfile yellowstr readstring pop}
{currentfile blackstr readstring pop
currentfile graystr readstring pop pop}
}
{ {currentfile cyanstr readhexstring pop}
{currentfile magentastr readhexstring pop}
{currentfile yellowstr readhexstring pop}
{currentfile blackstr readhexstring pop
currentfile graystr readhexstring pop pop}
} ifelse
true 4 colorimage
}
{
3 dict begin
/binaryOK exch def
[
1 1 5 {
dup
/currentfile cvx
[ /cyanstr /magentastr /yellowstr /blackstr /graystr ]
3 -1 roll 1 sub get cvx
binaryOK { /readstring } { /readhexstring } ifelse cvx
/pop cvx
5 -1 roll
colorplate dup 5 gt { pop 5 } if
eq not { /pop cvx } if
} for
] cvx bind
end
[
colorplate 6 eq {
/pop cvx
negativecolorplate { 0 } { 1 } ifelse
} if
colorplate 4 le
{
1 /exch cvx /sub cvx
} if
colorplate 6 ne
{
systemdict /currenttransfer get exec
aload pop
} if
] cvx
gsave
systemdict /settransfer get exec
systemdict /image get exec
grestore
} ifelse
} bd
%%EndResource
%%BeginResource: procset pdftext 6.0 1
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
Level2?
{
/pdfPatchCStrings
{
currentdict /CharStrings known currentdict /FontType known and
{
FontType 1 eq CharStrings type /dicttype eq and
{
CharStrings /mu known CharStrings /mu1 known not and CharStrings wcheck and
{
CharStrings /mu get
type /stringtype eq
{
currentglobal
CharStrings /mu1
CharStrings /mu get
dup gcheck setglobal
dup length string copy
put
setglobal
} if
} if
} if
} if
} bd
}
{ /pdfPatchCStrings {} bd }
ifelse
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq Encoding 160 get /.notdef eq and
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
%%BeginResource: procset pdfasc.prc 6.0 1
%%Copyright: Copyright 1992-2003 Adobe Systems Incorporated. All Rights Reserved.
/ASR {
13 dict begin
/mirV? exch def
/mirH? exch def
/center? exch def
/autorotate? exch def
/angle exch def
/shrink exch def
/Pury exch def
/Purx exch def
/Plly exch def
/Pllx exch def
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury 0 eq Durx 0 eq and Dlly 0 eq Dllx 0 eq and and
{ shrink 0 gt { GClipBBox } { GPageBBox } ifelse }
{ ITransDBBox }
ifelse
/PHt Pury Plly sub def
/PW Purx Pllx sub def
/DHt Dury Dlly sub def
/DW Durx Dllx sub def
angle 90 eq angle 270 eq or
{
PHt /PHt PW def /PW exch def
} if
autorotate? PHt PW ne and DHt DW ne and
{
DHt DW ge
PHt PW ge
ne
{ /angle angle 90 add def
PHt /PHt PW def /PW exch def
}
if
} if
angle 0 ne
{
/angle angle 360 mod def
angle rotate
angle 90 eq
{ 0 DW neg translate }
if
angle 180 eq
{ DW neg DHt neg translate }
if
angle 270 eq
{ DHt neg 0 translate }
if
} if
center?
{
ITransBBox
Durx Dllx add 2 div Dury Dlly add 2 div
Purx Pllx add -2 div Pury Plly add -2 div
3 -1 roll add exch
3 -1 roll add exch
translate
}
{
ITransBBox
angle 0 eq
{Dllx Pllx sub Dury Pury sub}
if
angle 90 eq
{Durx Purx sub Dury Pury sub}
if
angle 180 eq
{Durx Purx sub Dlly Plly sub}
if
angle 270 eq
{Dllx Pllx sub Dlly Plly sub}
if
translate
}
ifelse
mirH? mirV? or
{
ITransBBox
mirH?
{
-1 1 scale
Durx Dllx add neg 0 translate
} if
mirV?
{
1 -1 scale
0 Dury Dlly add neg translate
} if
} if
shrink 0 ne
{
ITransBBox
Dury Dlly sub Pury Plly sub div
Durx Dllx sub Purx Pllx sub div
2 copy gt { exch } if pop
shrink 1 eq
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{
shrink 2 eq 1 index 1.0 lt and
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{ pop }
ifelse
}
ifelse
} if
end
} [/autorotate? /shrink? /mirH? /mirV? /angle /Pury /Purx /Plly /Pllx /Durx /Dury /Dllx /Dlly /PW /PHt /DW /DHt
/Devurx /Devury /Devllx /Devlly /pdfHt /pdfW]
bld
/GClipBBox
{
gsave newpath clippath pathbbox newpath grestore
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
ITransDBBox
} [/Durx /Dury /Dllx /Dlly]
bld
/GPageBBox
{
{
currentpagedevice /PageSize get aload pop
/Devury exch def /Devurx exch def
/Devllx 0 def /Devlly 0 def
ITransBBox
}
stopped
{ GClipBBox }
if
} [/Devurx /Devury /Devllx /Devlly ]
bld
/ITransDBBox
{
Durx Dury transform matrix defaultmatrix itransform
/Devury exch def
/Devurx exch def
Dllx Dlly transform matrix defaultmatrix itransform
/Devlly exch def
/Devllx exch def
Devury Devlly lt {/Devlly Devury /Devury Devlly def def} if
Devurx Devllx lt {/Devllx Devurx /Devurx Devllx def def} if
} [/Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
/ITransBBox
{
/um matrix currentmatrix matrix defaultmatrix matrix invertmatrix matrix concatmatrix def
Devllx Devlly um itransform
Devurx Devury um itransform
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury Dlly lt {/Dlly Dury /Dury Dlly def def} if
Durx Dllx lt {/Dllx Durx /Durx Dllx def def} if
} [ /um /Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
%%EndResource
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec

[/NamespacePush PDFMark5
[/_objdef {Metadata_In_EPS} /type /stream /OBJ PDFMark5
[{Metadata_In_EPS} 972 (% &end XMP packet& %) ReadByPDFMark5
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<?adobe-xap-filters esc="CRLF"?>
<x:xmpmeta xmlns:x='adobe:ns:meta/' x:xmptk='XMP toolkit 2.9.1-13, framework 1.6'>
<rdf:RDF xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns#' xmlns:iX='http://ns.adobe.com/iX/1.0/'>
<rdf:Description rdf:about='uuid:7fb57b04-7220-4201-afa4-f44cffa70997' xmlns:pdf='http://ns.adobe.com/pdf/1.3/'></rdf:Description>
<rdf:Description rdf:about='uuid:7fb57b04-7220-4201-afa4-f44cffa70997' xmlns:xap='http://ns.adobe.com/xap/1.0/' xap:ModifyDate='2007-04-27T15:30:18+08:00' xap:CreateDate='2007-04-27T15:30:18+08:00' xap:MetadataDate='2007-04-27T15:30:18+08:00'></rdf:Description>
<rdf:Description rdf:about='uuid:7fb57b04-7220-4201-afa4-f44cffa70997' xmlns:xapMM='http://ns.adobe.com/xap/1.0/mm/' xapMM:DocumentID='uuid:e556a4c9-1600-4616-b60a-a8ab73ec123e'/>
<rdf:Description rdf:about='uuid:7fb57b04-7220-4201-afa4-f44cffa70997' xmlns:dc='http://purl.org/dc/elements/1.1/' dc:format='application/pdf'/>
</rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Metadata_In_EPS} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT PDFMark5
[/Document 1 dict begin /Metadata {Metadata_In_EPS} def currentdict end /BDC PDFMark5
[/NamespacePop PDFMark5

PDFVars/TermAll get exec end end

%%EndSetup
PDFVars begin PDF begin PDFVars/InitAll get exec
0 0 186 252 rectclip
0.0 0.0 186.0 252.0 re
W
n
q
186.0 0.0 0.0 252.0 0.0 0.0 cm
q
n
0.0 0.0 1.0 1.0 re
q
W
1 dict begin
/graystr 186 string def
186 252 8 [186.0 0.0 0.0 -251.999985 0.0 251.999985] {currentfile graystr readhexstring pop} bind
%%BeginData: 253 Hex Lines
image
9C9C9B9B9C9D9C9C9D9C9D9E9E9C9C9D9C9B9C9E9F9F9E9F9E9D9C9C9D9D9D9C
9B9C9E9E9E9E9E9F9C9D9C9C9D9F9E9C9C9C9C9D9D9D9D9D9C9E9E9D9D9E9E9E
9D9E9E9F9F9E9E9D9F9E9E9F9E9D9D9E9E9E9E9E9E9E9E9E9D9D9C9D9F9F9E9E
9B9C9EA09F9D9D9F9D9D9E9D9D9C9C9D9D9D9D9D9D9D9D9D9C9B9B9C9D9D9D9C
9B9D9D9C9B9C9D9C9C9C9B9A9A9C9D9B9B9B9B9B9B9B9B9B9C9C9C9C9C9C9C9C
9C9C9D9C9D9D9C9A9A9A9A9B9C9C9A999A9A9B9B999B9C999B9B
9C9B9B9B9C9C9C9B9D9C9C9D9C9B9A9B9C9B9B9D9E9E9D9E9D9D9C9C9C9D9C9C
9B9C9E9E9E9E9E9E9D9E9E9D9D9E9D9C9E9E9E9E9D9D9C9C9D9E9F9D9D9E9E9E
9D9E9E9E9E9E9E9E9E9D9D9E9E9D9D9E9D9D9D9D9D9D9D9D9D9D9D9D9E9F9E9D
9E9D9D9F9F9E9D9D9C9D9D9D9C9C9C9D9C9C9C9C9C9C9C9D9D9C9B9B9C9C9C9C
9C9D9D9C9B9C9C9B9B9D9D9B9A9B9C9D9B9B9C9C9C9C9B9B9B9B9B9B9B9C9C9C
9C9D9D9C9D9D9C9A9B9A9A9A9B9B9B9A9A9A9B9B999B9D9A9B9B
9B9A9A9A9B9B9B9B9D9C9C9C9C9A999A9C9B9B9D9E9D9D9D9D9C9C9C9C9C9C9B
9C9C9D9E9D9D9D9D9D9E9F9D9D9D9D9C9C9C9C9D9E9E9E9E9D9F9F9D9C9D9E9E
9E9E9E9E9E9F9F9F9D9D9D9E9E9D9D9E9D9D9D9D9D9E9E9E9E9D9D9D9E9E9E9D
A09E9C9E9F9E9D9C9C9C9D9C9C9C9C9D9C9C9C9C9C9C9D9D9E9D9C9B9B9C9C9C
9D9E9D9C9B9C9C9B9B9D9E9C9A9A9C9D9B9C9C9D9D9C9C9B9B9B9B9B9C9C9C9C
9C9D9D9D9D9E9C9A9B9B9B9A9A9A9B9C9B999B9A999B9D9B9A9A
9B9A9A9A9B9B9B9B9D9C9C9D9D9B9B9B9D9C9C9D9E9D9D9D9D9C9C9C9D9D9C9B
9C9D9D9D9D9C9C9D9C9E9F9D9C9D9D9D9A9B9B9C9D9E9E9E9D9F9F9D9C9D9E9D
9F9E9E9E9F9FA0A09F9E9E9F9F9E9E9F9D9D9E9E9E9E9F9F9E9E9E9E9E9E9D9D
A09E9D9D9E9D9D9D9C9C9C9C9C9C9D9D9C9C9C9C9D9D9E9E9E9D9C9C9C9C9D9D
9D9D9C9B9C9D9C9B9C9D9D9C9B9B9C9D9B9C9C9D9D9C9C9B9C9C9C9D9D9D9D9D
9C9D9D9D9D9E9C9A9B9B9C9B9A9A9B9C9B999A9A989B9E9C9999
9B9A9A9A9B9B9B9B9C9B9C9D9D9C9C9D9E9C9C9D9E9D9D9D9D9D9C9D9D9D9C9C
9C9D9D9D9C9C9C9D9B9D9E9D9C9D9D9D9E9E9D9D9D9C9C9B9EA0A09E9D9E9F9E
9F9F9F9F9F9FA0A1A09F9F9F9F9E9E9F9D9D9D9E9E9E9F9F9E9E9E9E9D9D9D9D
9E9E9E9E9D9C9D9F9C9D9D9C9C9C9D9E9C9C9C9C9D9D9E9E9D9D9D9C9C9D9E9E
9C9C9C9B9C9E9D9C9D9C9C9C9C9C9C9C9B9C9C9D9D9C9C9B9D9D9D9D9D9D9C9C
9C9D9D9C9D9E9C9A9A9B9C9C9B9A9A9B9B999A9A989B9E9C9A9A
9B9B9A9A9B9C9B9B9B9A9B9C9C9C9B9C9D9C9B9C9D9C9C9D9D9D9D9D9D9D9C9C
9C9D9D9D9C9C9C9D9B9D9E9D9D9E9E9D9E9E9E9E9E9E9D9D9FA0A09F9E9FA09F
9F9F9F9F9F9F9FA09F9E9E9E9E9D9C9D9C9C9D9D9D9D9D9D9E9E9E9E9D9D9D9E
9E9D9E9E9D9C9DA09D9D9D9D9C9C9D9E9C9C9C9C9C9C9D9D9C9D9D9D9D9D9E9E
9C9C9B9B9C9E9E9C9C9B9B9C9D9C9C9C9C9C9C9C9C9C9C9C9D9D9C9C9C9B9B9B
9C9C9D9C9D9D9C9A999A9C9C9C9B9A9A9B999B9A999B9D9B9A9A
9B9B9A9A9B9C9B9B9B9A9B9C9C9B9B9C9D9C9B9C9D9D9D9E9D9D9C9D9D9D9C9B
9C9D9D9D9C9C9D9E9D9E9E9D9E9F9E9D9D9D9D9E9F9FA0A09E9F9F9E9E9F9F9F
9E9E9E9F9F9E9E9E9E9D9D9D9D9C9C9D9C9C9C9C9C9D9D9D9E9E9E9D9D9D9E9E
9F9E9E9E9E9C9D9E9D9D9D9C9C9C9D9E9C9C9C9C9C9C9C9D9C9D9D9E9D9C9D9D
9C9C9B9B9C9E9D9B9B9A9B9C9C9B9C9D9C9C9B9B9B9B9C9C9B9B9B9B9B9B9A9A
9B9C9C9C9C9D9C9A9A9A9A9B9B9B9A9A9A9A9B9B999B9D9A9A9A
9B9A9A9A9B9B9B9B9C9B9B9C9C9B9A9B9E9D9C9D9E9E9E9F9C9C9C9D9D9D9C9B
9C9D9D9D9C9C9D9E9F9F9E9E9E9F9E9C9E9E9E9E9E9E9E9E9C9D9E9C9C9D9E9E
9D9D9E9E9E9E9D9D9D9C9C9D9D9C9C9D9D9D9D9D9D9D9D9D9E9E9E9D9D9D9E9F
A09E9D9E9F9D9C9C9D9D9D9C9B9B9C9D9D9D9D9D9D9D9D9D9B9D9E9E9D9C9B9B
9D9D9B9B9C9E9D9B999A9C9D9C9A9B9F9C9C9B9A9A9B9C9C9B9B9B9B9B9B9B9B
9B9C9C9C9C9D9B999C9A99999A9B9B9A9A9A9B9B999B9C999898
9C9C9B9C9C9C9B9B9D9D9D9D9C9C9B9B9C9B9A9C9D9D9D9E9B9C9B9A9A9C9C9C
9D9C9C9B9B9C9C9B9C9C9C9C9D9D9D9D9D9D9D9D9D9D9D9D9E9F9F9E9D9D9E9F
9D9C9EA1A19E9D9E9E9E9DA09A9F9E9E9E9F9B9E9F9FA19D9D9E9D9D9E9D9DA2
A09E9C9D9F9E9C9B9D999D9D9B9E9E9E9D9E9E9D9B9C9D9D9E9C999A9B9C9C9B
9B9C9C9B9B9C9C9C9B9B9C9B9B9B9C9C9B9B9B9B9C9C9C9C999B9C9B9A9C9D9D
9A9C9C9C9C9D9D9B9C9B9C9D9C9B9A9B9B9A9998999B9B999999
9C9C9B9B9C9C9B9B9C9C9C9C9C9B9B9B9C9A9A9B9C9C9C9D9B9C9B9A9A9B9C9B
9C9C9C9B9B9B9B9B9C9B9B9B9C9C9C9D9D9D9D9D9D9D9E9E9E9E9E9D9C9C9D9E
9F9E9D9E9E9C9D9E9F9D9A9E9EA09FA09E9B9CA29B979E9D9EA09E9B9C9B9DA2
9E9D9BA09D9F9DA09B9B9E9E9B9C9B999C9C9D9D9C9C9D9F9D9B9A9B9C9D9D9D
9C9D9C9B9B9C9C9B9B9B9C9C9B9B9C9C9B9B9B9B9C9C9C9C9C9D9D9B9A9B9B9B
9A9C9C9B9C9D9C9B9B9A9A9B9B9999999B9A9998999B9B999898
9C9B9B9B9B9B9B9A9B9B9B9C9C9B9B9B9D9B9B9C9D9C9C9D9C9D9C9B9B9C9C9B
9C9C9C9C9B9B9C9C9D9C9C9B9B9C9C9D9D9D9D9D9D9E9E9F9E9E9E9D9D9D9D9E
9E9D9C9D9E9FA0A19C9A999BA09C999A9E9A9BA29D9B9E96999E9D9A9B9C9C9D
9C9F9A9B9AA19C979A9D9E9D9D9D9E9D9D9C9C9D9C99999B9C9C9C9C9C9C9D9D
9C9D9D9B9B9C9C9B9B9C9C9C9B9B9B9C9C9C9C9C9C9C9C9C9D9E9D9B9A9B9B9B
9B9D9D9C9C9D9D9C9A99999A9A9898999A9B9A99999A9B9A9A9A
9C9B9A9A9B9B9B9A9B9B9B9C9C9C9B9B9C9B9A9B9C9B9B9C9E9E9D9C9B9C9C9C
9C9C9C9C9C9C9C9D9E9D9D9C9C9C9D9D9D9D9D9D9D9E9E9E9E9E9E9D9D9D9E9E
9C9C9D9FA0A09F9F9EA09F9CA09D9B9D9EA099999C9C9D99989C9893989E9F9E
9C9A9D9E9E999A9D9B9E9B9A9B9B9D9D9E9D9D9FA09E9C9D9C9C9D9C9B9A9A9B
9C9D9C9B9B9D9D9C9C9C9C9C9B9B9B9C9D9D9C9C9C9C9C9C9B9C9C9B9B9C9D9C
9B9C9C9C9C9D9C9B9B9A9A9B9B999999999B9B99999A9A9A9A9A
9B9B9A9A9B9B9B9B9B9B9B9C9C9C9C9C9B99999A9B9A9A9B9D9E9D9B9B9C9C9C
9C9D9D9D9C9C9D9E9E9E9D9C9C9C9D9D9D9D9D9C9C9D9D9D9D9D9D9D9D9D9D9D
9D9D9E9E9F9F9D9B9B9F9E9A999C9F9F989E91909685787C7F7E746C737F8383
7D737E8485707F95979D999EA39E9E9D9B99999B9D9E9E9F9B9C9D9D9B9A9A9B
9B9C9C9B9C9D9D9D9C9C9D9C9B9B9B9C9E9D9C9C9B9B9C9C9A9B9B9A9B9D9D9D
9A9B9B9A9A9B9B999C9B9B9C9B9A999A999B9B99999A9A9A9999
9B9B9A9A9A9B9B9B9B9B9B9C9C9C9C9C9C9A9A9B9C9B9B9C9B9C9C9A9A9C9C9B
9C9D9D9D9C9C9D9E9D9D9D9C9C9C9C9C9D9D9C9C9C9C9C9C9C9C9C9C9D9D9C9C
9E9E9D9D9E9F9F9D9B9E9FA39CA39F9A9E8C6A666D50394144433B363D454543
443D413D46424E54707C7E8E989092959B9D9E9A999A9B9C9B9C9D9C9C9C9C9D
9B9C9C9B9C9D9E9D9C9C9D9C9B9B9C9C9D9D9C9B9B9B9C9C9B9B9B9A9B9D9D9C
9B9C9C9B9B9C9C9A9B9A9A9B9B9A999A9A9A9A99999A9A999999
9C9B9A9A9B9B9C9C9B9B9B9B9C9B9B9B9D9B9B9C9D9D9D9E9B9C9B9A9B9C9D9C
9B9C9D9D9B9B9D9E9C9C9D9D9D9C9C9C9C9C9C9C9C9D9D9D9D9C9C9C9D9E9D9C
9D9D9D9D9E9F9D9A9C918997878D827A8461342A2C1F191F1A1D1B1A1F211C18
1E211A131929281B344244566057606B88959F9D999B9D9C9C9C9C9B9C9C9D9E
9C9D9D9C9C9D9D9C9C9C9C9C9C9C9C9D9D9C9C9B9B9B9B9C9C9C9C9B9C9D9D9C
9C9E9E9D9D9D9D9C9B9A9A9B9B99999A9A9A9A999A9B9B999999
9C9B9A9A9B9B9C9C9A9B9B9B9B9B9B9A9B99999A9B9B9B9C9B9C9C9B9C9E9E9E
9B9C9D9C9B9B9C9E9C9D9E9E9E9E9D9C9C9C9C9C9D9D9E9E9E9D9D9E9F9F9E9D
9D9E9E9D9C99948E86674E5B454D433D362A1D1A141116131314121013151312
12171118101A131418221B272B1E2D405B758C9292969B9B9D9C9B9A9A9B9C9C
9D9E9E9C9C9C9C9B9B9C9C9C9C9C9C9D9D9C9B9B9A9B9B9C9C9C9C9B9C9E9E9D
9B9C9D9C9B9C9C9A9B9A9A9B9B9A999A9A9A99999A9C9B989798
9C9B9A999A9B9B9B9C9B9B9B9B9B9B9A9A9A9A9B9B9B9C9C9D9D9D9D9D9D9E9E
9D9E9E9D9C9B9B9B9D9D9D9D9D9E9E9E9E9D9D9D9D9D9E9F9D9E9E9E999AA19B
9AA39C979C8C644A41392E25201E1C1A11121212121212110F0F0F1012121211
1111111111111112141213161817191C26405557646A839D999E9B98A09A9F95
9C9D9E9D9C9C9C9C9B9B9C9C9D9D9C9B9C9D9C9B9B9C9D9C9F9E9D9D9C9C9C9C
9B9C9C9C9C9B9A9A9B9B9B9B9B9A9A999A9A9999999B9B9A9999
9B9A9A9A9A9B9B9B9B9B9A9A9B9B9B9A9A9A9B9B9B9B9B9B9C9C9B9B9B9C9D9D
9C9D9D9D9D9D9D9D9E9E9D9D9C9C9C9C9C9C9C9C9D9D9E9E9E9D989C9E9B9C99
99A09780684B2F25211C1713131313121011111111111010100F0F1011111010
0F0F0F0F10101010120F0F11121011131E20252835395981959A96A2969A9DA1
9C9997989EA19F9A9B9B9C9D9D9D9D9D9D9E9D9C9C9D9D9C9C9C9C9B9B9B9B9B
9B9C9C9C9C9B9A9A9B9B9B9B9B9A9A9A99999998999A9A999999
9A9A999A9B9B9B9A9B9A9A9A9B9B9B9A9B9B9B9B9B9B9A9A9C9C9C9C9C9D9D9E
9B9C9D9D9D9C9D9D9D9D9C9C9C9C9C9C9C9C9C9D9D9D9C9C9B9E9C9E9C979CA0
9A8768482E1E1A1C1211101011111110101011111110100F1010101010100F0E
0F0E0D0E0F100F0F110F0F100F0D0D0F140F121B241F31516C78839E999F9D9C
9B9D9D9D9D9F9E9C9B9C9D9D9C9C9E9F9D9E9D9C9B9D9D9C9C9C9C9C9C9C9B9B
9B9C9C9C9C9B9A9A9C9B9B9B9A9A9A9A99999898989A9A989C9C
9999999A9B9B9B9A9A9A9A9A9B9B9B9A9B9B9C9C9C9B9A9A9C9C9C9C9C9D9D9E
9B9C9C9C9B9B9B9B9C9C9C9C9C9C9D9D9D9D9D9D9C9C9C9C9F9F9FA09B9A9682
68482A1D1716151210101111110F0E0E0F0F10100F0F0F0E10101010100F0F0E
0F0E0D0E0F10100F12101011111010111210101317151F2F3B4A667D9E9E9D98
999DA09E9B9C9D9E9B9C9D9C9B9B9EA09D9D9C9B9A9B9C9B9C9C9D9D9D9D9C9C
9B9B9C9C9B9B9A9A9C9C9B9A9A9A9A9B99999898989A9A989797
9999999A9B9B9B9A9B9A9A9A9B9C9B9B9B9C9C9C9C9B9B9B9B9B9B9B9B9C9C9C
9B9C9C9C9B9B9B9B9C9C9C9C9C9D9D9D9D9D9D9C9C9D9E9E9F979A9C9599854C
301B12141210100B0F101111100F0F0F0E0E0E0E0E0E0D0D0F101010100F0F0F
0F0E0E0E0F10100F100F0F10100F10100E0F0D0E0E11171F1C283C4775728095
9A9B9B999B9F9F9C9C9D9D9C9B9B9D9F9E9E9D9B9A9B9C9B9B9B9C9C9D9C9C9B
9B9B9B9B9B9B9A9A9C9B9B9A9A9A9A9A99999998989A99989797
9A9A999A9B9B9B9A9B9B9A9B9B9C9B9B9B9B9B9B9C9C9C9C9B9B9C9C9C9C9C9C
9A9B9C9C9C9D9D9E9E9D9D9C9C9C9C9C9D9C9C9C9D9D9E9E9F9C9E8E6C665A29
1B131315100F111010101010101010100F0F0F0F0F0F0F0F0F0F1010100F0F10
0E0E0E0E0E0E0F0F0E0E0E0E0E0E0E0E0E0F10161311101612181A213635487C
939A9F9E9C9D9E9D9C9D9D9C9B9B9C9E9F9F9E9C9B9C9D9C9C9C9C9D9D9D9C9C
9B9B9B9B9B9A9A9A9B9B9A9A9A999A9A99999998989999989A9A
9B9A9A9A9A9B9B9B9B9B9A9A9B9B9B9A9A9A9A9A9B9B9C9D9D9D9D9D9D9D9C9C
9A9B9C9C9D9D9E9E9D9D9D9C9C9C9C9C9D9D9D9D9D9B9A999791846437252516
0F0F13141212100C0E0E0D0D0D0D0D0D0F0F0F0F101010110E0F10100F0E0F0F
0E0F100F0E0D0E0F0E0E0F0F0F0F0F0E14100D130D0F0E1213141218171C244D
647A919A9A9A9C9D9C9C9C9C9C9D9D9EA0A09E9C9B9C9D9C9D9D9D9D9D9D9D9D
9B9B9B9B9B9A9A9A9A9A9A9A9A99999999999897989999979898
9C9B9A999A9B9B9B9B9B9A9A9B9B9A999A9999999A9B9C9D9C9C9C9C9C9B9B9B
9B9B9C9C9C9C9C9D9C9C9C9C9C9C9D9D9E9F9F9F9C9995937962422F21161411
1013140F0D1012100E0D0D0E0F1010100D0D0D0D0E0E0F0F0E0F100F0E0E0E0E
0F1011100E0D0E100D0E0E0F0F1010100E0F0E140E15110D130E10110F1C1A22
27456A86969E9D999C9C9C9D9D9E9E9EA0A09E9B9B9C9C9C9C9C9B9B9B9B9B9C
9B9B9B9B9A9A9A9A999A9A9A9A99989899999897979898979999
9A999898999A9A999B9B9B9B9B9B9B9B9B9B9B9A9A9A9B9B9B9A9B9B9C9C9D9D
9E9D9C9B9B9C9D9E9A9D9D9C9E9D9C9D9E9C979E9E916C624737241A16131211
10110F0E11100D0D0E0F0F0E0E100F0C0C0C0D0E0F0F0E0E0E0C0E11100C0D12
0F0E0E0E0E0E0E0E0C0E0F0F0D0C0D0F0F10101010100F0F0F0F101315161513
152D446F959C9C9B9F9B9A9B9F9D9AA19FA09B9C9C9A9D9B9B9B9B9A9B9D9D9B
9B9B9B9B9B9B9A9A9B9A999898999A9A98989898999998979797
9A9999999A9A9A9A9B9B9B9B9B9B9B9B9A9A9B9B9C9C9C9C9B9B9B9B9B9C9D9E
9C9C9C9C9C9C9C9C9E9E9C9B9C9C9B9E99A69C929280431F231D1714100E1014
0E11101011100E0F0F0F0F0E0F10100E0F0E0E0F1111100E0F0E0E0F0E0D0F13
11111010100F0F0F0F0F100F0F0F0F0F111111111010100F12100E0E0F111111
15222E5380989E979A9D9E9B9C9C9A9D9D9E9A9C9C9A9C9A9C9C9B9A9A9C9D9B
9C9C9C9C9B9B9A9A9A9A9A9A9A9A9A9A99989899999999989898
9B9A999A9A9B9B9B9A9A9A9A9A9A9A9A999A9B9D9D9D9C9B9B9C9C9C9B9C9D9F
9B9C9C9D9D9C9C9B9F9D9B9C9D9C9D9F98999C8860482F1D11101112100E0F13
0E11121112100F111010100F0F11111013110F101314120F1010100F0E0F1112
101011111010100F1111101010100F0E0F0F0F0F0E0E0E0E13110E0D0E0F1010
13181B315A839B9B969B9B9A9C9C9DA09C9E9B9D9D9B9D9A9C9C9B9A9A9C9D9C
9D9D9D9C9C9B9B9A9A9A9A9B9B9A999999999999999A99999A9A
9A9A9A9A9A9A9B9B9A9A9A9A9A9A9A9A9B9B9C9C9C9B9B9A9C9C9D9C9B9B9D9F
9C9C9C9C9C9C9C9C9E9B9D9F9C9A9B9CA496947D4D31251E16120F1012111010
0F12111011100F12111110101010111013121111131312110F1111100F101111
0F101111111211101110100F0F0E0E0E0D0D0D0D0D0E0F0F1110101112121110
1014161B2F577F909B9F9C9D9E9B9C9F9D9E9B9D9E9C9E9B9C9C9C9B9B9C9D9B
9C9C9C9C9C9C9B9B9B9B9B9B9A9A9A9999999899999999999A9A
9999999999999A9A9A9A9A9A9A9A9A9A9B9B9B9A9A9A9A9A9C9C9C9C9B9C9D9E
9D9C9C9B9B9C9C9D9E9B9E9F9A999B9A9B997B4E3D2E161216110D0E1111100F
1213100E11111011121211111110101112131212121212131113121010111212
1113131212131311101111100E0D0E0F1110100F0F1011110F0F11121312100F
10111412162D4C6383959B9C9B999E9E9E9F9B9C9D9B9F9D9B9D9D9D9D9D9C9B
9B9B9B9B9B9C9C9C9C9B9A9A99999A9A99989898989999989797
999999999999999A9A9A9A9A9A9A9A9A9A9999999A9A9B9C9C9C9B9B9C9C9C9D
9D9C9B9B9B9B9C9D9D9A9D9D9A9DA09A8F7D55231717151610101111100F1011
1414100F12121112131313141312121312131413121214151615131211121415
1416151312131311111213110F0E0F111413121111111212121212121111100F
110E1112161E2633638A9C9F9C9BA39C9E9E9A9B9C9B9E9C9B9D9E9D9C9D9C9B
9B9B9B9B9B9B9B9C9C9B9A9999999A9A99989797989898989898
989999999898999A9A9A9A9A9A9A9A9A9999999A9A9A9B9B9B9B9A9B9C9C9B9A
9C9B9B9B9B9B9B9C9C999C9D9AA09E8F7E4D331E1311160E1012151411101113
1315131215141214131315171715151714141414141516181816161717151516
1516151212141412131313121010111213121110101113141514131211101010
0F0E1010171A16204A738C9DA09DA29A9D9E9A9C9D9B9E9C9C9D9D9B9B9B9C9C
9C9C9B9B9B9B9B9B9B9B9A999999999999989797989898989999
98999A999898999A9A9A9A9A9A9A9A9A999A9B9B9B9A99989B9A999B9C9D9B99
9A9A9B9B9B9B9A9A9D9A9D9C999B927A4A271D19190F10121111121212121212
1215161617151416131416191918181A16151415161819191816191E1E181515
1517161314171817141312111112121111101010111315171313131312100F0F
0C10120A0D100E1E1F3E5C869C99A09F9D9F9C9E9E9C9E9B9D9D9C9A999A9C9D
9E9D9C9B9B9A9A9A9A9A9A9A9A99989899989797989898989898
999A9A9A9A9A9A99999B9B9A9A9B9B999B9A999A9B9B9B9B9A9A9A9B9C9C9B9A
9C9B9B9B9C9C9B9BA0959BA09D9D8352251E17131110111215120F1013151413
13151718191B1A181A1B1D1F1E1B18171C1816181918191C191C1C19181A1C1B
1F1C1918191917151A1310101012141210111213121113171514121110101111
0F0E0E0F1011111114202C6A9D9B9C9EA19C9E9E9D9F9D9A9D9C9C9B9C9D9E9E
9C9B9A9A9B9B9B9B9C9C9B9A9999999A9A9A9A9A9A9A99989797
9999999A9A9999999A9B9B9A9A9B9B9A9B9A999A9A9B9B9A9A9A9A9A9B9C9B9B
9C9B9B9B9C9C9C9B9BA0A099999972391C171311111213151312121214161716
13171A1B1D1E1E1D231F1C1D20211F1C201B18191B1B1C1E1E1D1B191B1F201D
1C19161516171615110F12151414141316151515141212141515131211111212
1110100F101010100D151F528A9D9F989E9B9D9D9D9E9D9D9A9A9A9A9A9B9B9C
9C9B9A9A9B9B9B9B9B9B9B9A9998999A98979797979797969898
9999999999999999999B9B9A9A9B9B999B9A9A9A9A9A9A9A9B9A9A9A9B9B9C9C
9C9C9B9C9C9C9C9B9C9A9898947B4B2318151212121212131313151617191A1B
171A1D1E1F20202028262425282A2724221D1A1D212222221F1E1D1B1D201F1C
1D1B191718181919161417171312151614141414141414151717161515151514
11121110100F1010141C253C64879AA09F9E9E9F9E9C9D9E9B9B9B9C9C9B9B9B
9C9B9A9A9A9B9B9A9A9A9A999998999A98989797979797979999
9A9999989899999A999A9A99999A9A999B9B9B9A9A9A9A9A9B9B9A9A9A9B9C9C
9C9C9C9C9D9D9C9B9E9AA09B713B1E1A1715141414121111141516181A1C1D1E
2020201F1D1D1E2024272929292B2B2B28232124282825221F22232321201E1C
1F1E1D1B19191A1B1B1818171211141612121213151617171616161617171616
11121211101011120C0F17182C567D9B9FA09C9E9E9B9D9E9C9D9D9D9D9D9C9C
9C9B9B9A9A9A9A9A999A9A999999999A9A999898989999999998
9A9A999999999A9A999A9A99999A9A999B9B9B9B9B9B9A9A9B9B9A9A9A9B9C9D
9C9C9C9C9D9D9C9B9E9BA08A4E2419131312131515151414151516191C1E1F1F
2524211E1B1B1D1F232729292D3337362F2B27282A282420242425252523201C
1E1F1E1C19171819161416181514151317161616161717161514141516171615
1313131211101011140C121423456C9599A09A9B9E9B9E9E9B9C9C9D9D9C9B9A
9C9C9B9A9A9A9A9B999A9A9A99999A9A9A999797989898989797
9A9999999999999A9A9B9B9A9A9B9B9A9B9B9C9C9B9B9B9B9B9B9B9B9B9B9C9D
9C9C9B9C9C9C9C9B9B979A7D442822121211121516151516171617191D202121
2523211F1F1E1F202124282E3944433D322E2B292929272528221D1E21221E18
1E2123211C191A1C1A1616171616181618191817171717171716161718181716
1616151311100F0F140C11161D29406792A19D9C9E9A9E9C9C9C9C9D9C9C9B9B
9C9C9C9B9A9A9A9B999A9A9A99999A9A99989797989898989696
9999999999999999999A9B9A9A9B9A999A9B9C9C9B9B9B9B9A9B9C9C9B9B9C9C
9C9B9B9B9C9C9C9B9A9C966C30151514131313151515151619191A1C1F222526
2726282B2C2B29282123262C3B48494239383735343231302B25201E1F1F1B17
1C212625211D1E1F211B191917181A1A181A1A1918191A1A1B1A181819191816
1817151312110F0E0E0F1011110D1B3D829E9E9E9E9A9F9C9D9D9D9D9D9D9D9D
9D9D9C9C9A9A9B9B99999A9A9999999999989898989998979696
98989999999998989899999999999998999A9B9C9B9A9B9B9A9B9C9C9C9B9C9C
9C9B9B9B9C9C9B9B9F97753F1A15171113121315161618191A1C1E202225292C
2E2F33393D3A35322F2F2C2B3749545547494A48433E3A372F2F2E29231E1C1D
171D2324201D1D1F1B191C1F1C1B1A181B1E1E1C1A1B1C1C1C1A181717171514
181614131312110F0F140E0D1313203C6F949A9C9D99A19F9D9D9D9D9D9D9D9D
9D9D9D9C9B9A9B9C98999A9A9998989997979797989897969696
979798999999999897999B9A999A9A9A999A9B9B9B9B9B9A9C9B9B9A9A9B9B9B
999A9C9C9B9A9B9C9D84461E1116131312131517191918161B1D27272A312D31
3A3D4144464646474848443B343C556C6157504D504E44443B302A2A26201E1D
1A1B1C20222022292922211E23241D262420221F2021191F1E1D1E1D1B1C1C17
1215161513121111110F0F1112151E274263949B9E9C9C9F9C9C9D9D9E9E9E9E
9E9C9A9A9C9C9B9A9B98999A98999A9897979798999897959798
969797989898989898999A99999A9A9A98999A9A9A9A9A9A9B9B9A9A9A9A9B9B
9B9B9B9B9B9A9A9B92692E16101513141213141617191A1A1C1E28282B353941
474B51565A5D616360625E544D505960646367655F544A50493D35312C272625
241B1921231F1F23252F291E29302A2E3231312F2E2B2427231E1E211E1C1C1B
18171617151211110F0F1012110F1116274C889C9F9B9B9D9C9C9C9D9D9D9D9D
9C9B9A9A9A9B9A999A9899999798999796969797989796949898
9696979797979797999A9998999B9B9A989898999A9999999B9A9A9A9A9A9B9B
9C9B9A9A9A9A9A9A97582116141411111113151617181B1D1C2330353A444B53
585D62676A6D72767477756E6B6A665F656C7778706053584A3F38352F2A2826
29262421202A302B2D33352F2733413A3B3F3C3C3A332F2E2C252427241E1D1C
1D1917181713121412100F100F0E0F121B4482999A9DA19C9C9C9C9C9D9D9D9D
9B9B9A9A9A9A9A9A9A9899999797999797979797989796949798
96979797979898989A9A9998999B9B999898989A9A99999A9A9A9A9A9A9B9B9B
9C9C9C9A9A9B9B9A8D451715141413131215191B1B1A1D20262F3D444A525A60
676B707374767A7D80828280807F786F71767F807D725F594F47423F38322E29
2D3137312A363F373E3E414234364E504A4F4849483F3C37362F2D2D2924221F
201D1A181717161614110F0F101113151C3670989D9BA09F9C9C9C9C9D9D9C9C
9C9C9B9B9A9A9A9B9A989A9A9798999898989898989896959797
97979898989899999A9A9998999B9B999999999B9B9A9A9B9A9A9A9A9B9B9C9C
9B9D9E9C9A9B9B9B813B1B181413141215171B1D1C1D2127363D454D555F6A6F
73787D808183868A8D8D8E908F8B868385898B8788867265554E49464140403D
3C39444F484448494C5A4D4C554B526762665D5E5E55524A433F3A332C2B2B25
21211D1716181713121111121413111014194E94A49899A19D9D9D9D9C9C9D9D
9C9C9B9B9A9A9A9B9A989A9A9797999898989798989897969696
98989898989999999A9A9999999A9A999B999A9C9C9A9A9B9A9A9A9A9B9B9C9D
9A9D9E9C9C9C9A987034211A13121411161617191B1F29323E48505E69727C7D
7E82878A8B8D909295949699989390918F94958D9092857D746A60564E4F514F
4641495455575C5E5D675D5B6865626B6E726E6E716C66615A564F413533322B
2524211A17171512141210101212121113183F849E9D9D9D9D9D9D9D9C9C9C9C
9B9B9A9A9A9A9A9A999799999696989797969697979796959595
9797979798989999989A9B99999A9A999B999A9C9C99999B9A9A9A9A9B9B9C9D
9B9C9C9C9D9D9891501E1714111215151615161A1F2735414D5A63727C808683
86888B8D8D8F919396979898999998969295979394958E8F8B8274665954524D
5557565558626A6C6E6A6E6D6970716C707478777978706E6A68645849413B35
2A2724221D1714151614110F1013141516203D7A99A2A09B9D9D9D9C9C9C9C9C
9C9B9A9A9A9B9A99989799999696989796969696979797969595
9797969697979898989A9B9A999999999B99999C9C99989A9999999A9A9B9C9C
9B9B9B9B9D9D968C491A18151313141417171A212933424E646F737C807F8682
898A8B8C8D8F929498999895979D9C979997999898958E93928F8A837C7A7770
777775736F696C7776757A726E6F6D78767A837F7E7C71726C6C6F6C5E504741
2F2725292418151C151515141413100E1115327FA19E989E9D9D9C9C9B9B9B9B
9E9C9A9A9C9C9B9A99989A9A9696999897979697989898979595
979696969798989899999999999999999B9A9A99999A9A9A999A9B9A9B9C9C9B
9F999B9E9C9B9B67261C14121213151818171C27303C536977767E8483858A88
8C8C8C8C9094969696989B9B999898999B9C9C9B9997969699968F8785898C8C
8B8D8C868180807F7B7B7B7B79797D828286858487837C7D787575746D63564A
4031262828201816181413121113131014121C629E9D989F9D9D9D9D9E9D9B9A
9D9C9B9A9B9B9B9B9A9A9A999898989899979798999796979898
979696969898989898989999999999999A9A9A9A9999999A999A9B9A9B9C9C9B
9B9A9D9D9A9A8E4F1E1814141515161817191F2A394E6576797B818687888989
8C8C8D8D9195979798999A9B9B9B9B9A9B9C9C9B9A9998979798969190929392
959392918D89898B8786858381808387888A8A8A8B87817E7C797A7A756F645A
4C3F302A28241D16181414131112120F0F151643889D9F9C9D9D9D9D9D9D9B9A
9D9C9A9A9A9B9B9A9B9998989999989898969698989795969594
9797969798999998989898999999999998999A9A9999999A9A9B9B9A9A9B9C9B
999C9E9B9A9C83391815141515151619171D25314761747B7D8083888B8A888A
8C8D8E8F939699999B9B9B9C9D9D9C9C9B9C9C9C9C9B9A99989B9D9C9B9B9B9A
9E99979A9892909392918F8D8A8A8C8F908E8F8F8D8A8680827E7F807D79736B
5E5341312A28211819151515121112101211123B8A9E9D9E9E9D9D9C9D9C9C9B
9C9B9A9A9A9A9A9A9B999798999A999799979798999796969897
9797969798989898989899999999999997999B9B9A99999A9A9B9B9A9A9B9B9A
9B9D9D9A9A9E7D32191614141314171B181F2B3F586F7A7B808484878C89868B
8C8E8F9295989A9B9E9D9D9D9D9D9C9C9C9B9C9D9E9E9C9A9C9FA1A09E9F9F9F
A29D9B9D9C9895959796949291919396938F91928B8A8983858181817E7C7973
6D6655403129231D1A171717131213121710153B8F9F99A19E9D9C9C9C9C9C9B
9C9B9A9A9A9A9A9A9B9A98989999989799979798999796969695
97979696979898989899999A9A9A9A9A989A9B9B9B9A9A9A9A9B9B9A9A9B9B9B
9C9C9C9B9A9B742F191715141314191D1B21324D68797F81848684868B88868C
8D8F9194979A9C9D9D9FA09F9D9C9D9E9C9C9D9E9F9F9D9C9FA1A3A2A0A0A1A2
A2A19F9E9F9E9B979A99979695969798959193928A898B87868281807D7C7B77
777266533C2B23221B1717171312141414151727799E9C9D9E9D9C9C9C9C9C9B
9D9C9A9A9A9B9B9A9A9B9B999897979897959597979695959595
979796969798979799999A9A9A9A9A9A9A9A9A9B9B9B9A9A9A9B9B9A9A9B9C9B
9B9A9B9C999768271717171616171B1F222739576F7A8086888685878A89898E
8E9093979A9B9D9F9D9FA1A19F9FA0A19E9F9FA0A0A09F9F9FA1A3A4A4A3A3A3
A1A2A19FA1A3A19C9D9D9B99999A9A99979595928D8C8C8B888482817E7E7F7C
7B7871634B3428281E181615121114151115161A669D9D9D9E9D9D9C9D9C9C9B
9D9C9A9A9A9B9B9A9A9B9B9A9796979897969697979695959897
989796979798989799999A9A9A9A99999B9A999A9B9B9A999A9B9A999A9B9C9C
9A9B9B9C9899652216171717171A1D1F282F435E71797F868A84858A8A898B8D
8F9194999B9C9EA0A0A1A3A4A3A3A3A3A2A2A2A2A2A2A2A2A2A2A4A5A5A5A4A4
A2A1A0A2A3A4A2A1A0A09F9E9E9F9E9C9A9A979493918D8D8A8685838080817F
7D7A766D5A43322C231B1615121215161311141B609C9B9E9D9D9D9D9D9D9B9A
9C9B9A9A9A9A9A9A999A9A999897989998979798989796969494
98979797989898989999999A999999999C9A98999A9B9A999A9A9A999A9C9C9C
9A9C9C9B999E682519181716161A1D2028344A63747B81878982858C8A8A8D8C
9091959A9C9D9EA1A4A4A5A6A6A6A4A3A4A5A5A4A3A3A4A5A6A5A4A4A4A4A4A5
A6A2A1A5A6A3A2A5A1A2A1A0A1A3A19F9D9D979598958D8C8B88878581818280
7D7B7871634F3A2D281E17151213161715131418589E9C9C9D9D9D9D9E9D9B9A
9C9B9A99999A9A9A999998989999999998979698989796969494
979797979899999A999A9A99999999989A9A9A9A9A9A9A9A98999A9A9B9B9C9C
9A9A9C9B9C98551717171718191B1F242C3A4C5F717B8187878585898D8D8D8D
9191959A9E9FA0A1A2A5A9ABAAA8A8A8A5A5A6A6A4A2A4A8A8A8A7A4A4A5A4A3
A3A4A4A4A4A4A3A2A5A4A5A6A6A5A4A39E9C9A999794918F8F8D898582828385
7E7B7974695A47362E1E1B1A161413181412161447969B9E9F9E9D9D9C9D9D9D
9C9B9A9999999A9A9B9A9A9A9999989898969596979695959493
9797979797989899999A9A99999A99989A9A9A9A9A9A9A9A98999A9A9A9A9A9B
9A9B9D9A9B955319181616181A1E24282F3E5061727C81858685868A8D8E8E8E
9293969B9E9FA0A2A3A6A9ABA9A8A8A9A8A7A7A7A6A4A5A8A9A9A8A5A4A4A3A2
A3A3A4A5A5A5A4A4A5A5A7A9A9A8A5A4A19D99979795928F908D898683828181
7F7A78766E6351403127221A161816131514171446979C9F9D9D9C9C9B9C9C9C
9C9C9A9A99999A9A999998989898979797969596969595959594
979797979797979898999999999A9A989A9A9A9A9A9A9A9A9A9A9B9B9A999A9A
9A9C9C9A9C94511D191717191C21272D35455564747F82838686898C8E8E8F90
9395989C9D9EA1A3AAADAFAFADACACACACAAA9A9A8A7A7A8ACADACA9A6A5A5A5
A5A6A7A8A8A8A8A8A7A8A8A9AAA9A7A6A29E989697979492918E8B8987858280
807B7877736C5C4C382E271E191C17141515171244979D9E9D9D9D9C9C9D9D9D
9C9C9B9A99999999999999989898989897959596969594959494
969797979797989898999998999A9A999999999A9A9A9A9A9B9B9C9B9B9A9B9B
9A9C9B9A9E95511E1B19181B1F24292E384959667580818186888B8D8D8E8F91
94969A9D9D9EA1A4AAADAFAFADABA9A8ADACAAAAABAAAAA9ADAEAEACA9A7A7A8
A7A8A9AAAAAAABABAAAAA9A8A9A9A8A7A19D999798989796918F8C8A89888583
817C7978756F635442312A25201D18181415160F42979D9C9D9D9D9D9D9D9D9E
9C9C9B9A99999999999999999898979796959495959494949594
969697979898989898999998989A999898989999999999999A9A9B9B9B9B9B9C
9B9A9A9A9D96521B1B1A1A1E23282C2F39495967767F807E86898C8D8C8D8F91
95979B9E9E9EA1A5A8ACB0B0AFAEACA9ADACABABACADACABACADAEADAAA8A8AA
AAABABABABAAABABABACACABAAAAA8A6A09F9D9B9A999898928F8C8989888684
827D7A787570675B4938302A24201A1A1415171043979C9B9C9C9C9C9C9C9C9C
9C9C9B9A99999898999998979796959596959495959494949796
96979798989898989899999898999998989899999999999998999A9A9A9A9B9C
9C999B9A9B98571B1C1B1C22282C2F313D4B5C6C7B81808086898C8C8C8D9092
96989C9FA0A0A2A6A6ACB1B3B4B4B2AFACACACACADAEAEADACADAEAEADABABAD
ADAEAFAEACACACADABAEAFAFAEADA9A4A3A3A19F9C99989895928F8C8A898786
827D7B7976736C624C423A2C24251E171616181346989C9C9C9C9C9C9C9C9C9C
9B9B9A9A99999898999998989796969596949495959493949594
97979898979796969899999898999998989999999A9A9A9A98999A9A9A9A9A9B
9C989D9C999C6222201E1F252B2F3233424E5E707F82818285898B8B8C8F9394
97999DA1A2A2A4A6A2A8ADAFB1B3B2AFACADADADADAFAFADAEAEAFB1B0AFAEAF
AEAFB0AFADACADAEABAEAFAEAEAEABA6A7A5A3A09E9B9998969592908D8B8A8A
847E7B7A7977706550463E2F2627201A171619164A999C9C9D9D9D9D9D9D9C9C
9B9B9A9A99999998999999989898979796959495959494949392
989898989796959498999998989998979999999A9A9A9A9A999A9B9B9A9A9B9B
9B97A09E99A06C2B242222272D313334434D5D717F817F8185888A8A8C909596
989A9EA2A4A4A5A7A5ABAFB0B2B4B4B1ACAEAFADADAFAFAEAFADAEB0B1AFAEAE
ACADAEADABAAAAACACAEADAAAAADACA9A9A6A2A09F9D9B99949493918E8D8C8B
867F7B7A7A79716553443D342A262020181519184C999B9C9C9C9C9C9C9B9B9B
9A9A9A9A99999999979797979797979796959495959494949493
969797979697979899989898999998979899999999999A9B9A9B9C9C9B9A9A9A
9B9B9B9B9B9D762C1F252325312E3D43444F5B717B878381878A8C8E8F919599
9B9C9EA1A4A5A4A2A8ABAFB3B5B4B2AFACABABABADAEADABADAEB0B1B0ADACAD
AFADABABACACACABACADAEAFADABAAA9A7A6A5A2A09D9C9B999794918F8D8B8A
87817B7D7A76736552473C37312A252417181B1A53999D9A9D9D9C9B9B9D9D9B
9B9B9A9A9A9A9A99999998989897979795949596969493939392
96979797969797989998989999999998979798979798999A9B9B9B9B9A9A9A9B
9A9B9C9C9D9E762C2527242D3A3E48484B4D5B758080808786888C8E8F929699
9B9C9EA1A3A4A4A4A6A8ACB0B3B3B1AFAEACACACAEAEAEADAEAEB0B2B1AFAEAF
AFAFAFAEAEAEAEAEACADAEAEACAAA8A7A5A5A4A2A09E9C9B99989693918F8C8B
87817B7D7A777263564A3E3937322B261F1D1D1C50999E9C9D9D9D9B9C9D9D9C
9B9B9A9A9A9A9999999999989897979795949596969493939594
969797979796979899989899999999989899999999999A9B9B9B9A9A999A9B9C
9A9B9C9C9C9E782F25292B383C444D504F4F6077837D808A85888C8E90939799
9C9D9FA0A2A3A5A6A7A8ABAFB1B2B0AFAFAEADADAEAFAFAEAFB0B1B2B1B0B0B1
AFB0B1B1AFAEAFB0ACADAEADABA9A7A6A3A3A3A3A19F9C9A9999979694918E8C
87827B7C7C797364584E423B3836302B2A221E1E4E999F9D9E9E9D9C9C9E9D9C
9C9B9A9A9A999998989898989797969695949596969493939493
96979797979697979999999999999998999A9A9A9A9A9B9C9A9A9A9A9A9A9B9C
9C9C9C9A999D7932272A303D3B474E504E5669748180868885888C9092949799
9C9EA0A1A1A2A4A6AAABACAEB0B0AFAEAFAEADAEAEAFAFAEB1B1B1B2B1B1B0B1
AFB0B0B0AFAEADAEADAEAEADABA8A6A6A3A3A3A3A29F9C999A99989896938F8C
87837B7C7E7C75665853493E3734333230251F214E999E9D9E9E9D9C9D9E9E9C
9C9B9A9999999898979797969696959595949596959493949592
96979797979797979899999999999898989899999898999A98999A9B9B9A9B9B
9B9B9C9A999D7A34312D2F3D4150504C4E5B6F7581848A86878A8E9193959799
9C9EA1A3A2A2A4A6AAAAABACADAEADACADADADADAEAEAEAEB0B0B0B0B1B1B1B1
B0B0AFAFAFAEADABAEAEAEADABA9A7A7A4A4A4A4A3A09C9A9A99989897938F8B
87867D7C7F7B746858554D433C39373534282224559B9E9D9D9E9D9C9D9E9D9C
9C9B9A999999989897979797969695959595959695949394908B
95969797979797989898999998989898979898989898989998999A9B9B9A9A9A
989A9C9B9B9E7C363130373F45515050535D6D7983858889898C8F9194969799
9D9FA2A3A3A3A4A5A6A6A7A9AAABABAAAAABACADADADADADACADAEAEAFB1B1B0
B1B0AFAFAFAFADACADAEADACABA9A8A8A6A5A4A3A2A09D9B9A99979796938E8B
888A807D7E7973695B554D4946413A33352A2626619E9E9D9D9D9D9C9D9E9D9B
9C9B9A9A9A999998989898979797969696959596959494948F8A
959697979797989897989999989798989898999999989999999A9A9A9A9A9A9B
999A9C9B9BA0813E2B334242484D4F565A606A7A8186868A8A8C8E9194969899
9EA0A1A2A2A3A4A6A6A6A7A8A9AAAAA9A7A9ABACADADACACABACACACAEAFAEAC
AFAEADADADADADACABACACABAAA9A9A9A7A5A3A2A2A19F9D9B99969594928E8B
888D847E7E79746E645B54524F473E38352C2A276B9F9D9D9C9C9C9C9C9D9C9A
9B9B9A9A9A9A9999989898979796969696959596959494959492
9495979798989898979899989897979897989999989898999A9A9A9999999A9B
9B9C9B9899A186452D3444424F514F545C646A787D8887888A8C8E919396989A
A0A0A0A1A1A3A5A6A9A9A9AAAAAAA9A9A6A8AAACADADACABABACACACACADABA8
AAABABABA9A9ABACAAAAABAAA9A8A9A9A6A4A2A1A1A1A09E9C99969493918E8B
878E867F7F7B78746E665F5B53494342352D2C25709F9B9D9B9C9C9B9C9D9C9A
9B9B9A9A9A9A9A99979796969695959596959596959494959091
969696979798989998989999989898999898999999999A9A9A9A9B9B9A9A9A9A
9E9A9B9D9A9C914B2A2E414D4A4E5B6063656B768284858A8A8D909193979999
9FA0A2A3A4A5A5A4A8A7A7A6A7A9AAAAA7A9ABACACACACADAFAEADACACACABAB
A9AAABABABAAA9A9A9A9A8A8A8A9A9A9A7A7A5A2A1A1A09E9D9C999592918F8D
89888784827F7A756F6B665554504B45452C29337C9E9A9E9D9B9A9B9D9D9C9A
9B9B9B9B9A9A9998989797969696979795949596969493939393
96969697979898989798999999989898979899999999999A99999A9A9999999A
9C9A9B9D9A9C8F4823354B4D4854615D646569748085878C8D8C8E929291949A
9C9EA0A0A1A2A4A4A5A6A6A6A7A9AAA9A9AAABACACACACADADADACACACACABAA
AAABABABABAAA9A8A7A6A6A7A7A8A7A7A6A6A4A1A1A09E9A9C9C9A9694928F8C
8A898784827F7B7872696A5D534E4F45412E2738829E9B9E9D9C9B9C9D9D9C9B
9A9A9A9A9A999898979797969696969794949496969493939292
96969697979798989798999A999898989798999998989999999A9A9A9A9A9B9B
9B9C9C9C9B9D8F4727354A504D56616163666A758186878B8C8C8E9294949598
989C9E9E9FA2A5A6A5A8A9A9AAACADACABACADADADAEAEAFADACACACADADACAB
ACADADAEADACAAA9A9A8A7A7A8A9A9A9A6A3A09E9FA09E9B9A9A98969594908C
8989878481807E7C796A6E64524B53493F3327438D9E9D9D9D9D9C9C9C9C9C9C
9A9A9A9A99999898979796969696969694939495959493939292
96969797979798989798999A999898989798999999989999999A9B9B9B9B9C9C
9B9D9D9C9C9E914D2A34424B4D565F616269717A8487878A8C8E8F919597938D
92979C9C9DA0A4A5A5A8AAABADAFB0AEACACAEAFAFB0AFAFADACADADAEAEAEAD
AEAEAEAFAEADABAAABAAA8A8A9AAAAAAA8A39D999B9D9C99969593949696928D
88888683828282817E706D635247514A3D382850979E9D9C9C9D9D9C9B9B9B9C
9B9A9A9A9A999999979797979696969694939495959493949292
97979797979898989798999A9998989898999A9A999999999899999A999A9B9C
9B9D9B9A9B9D95582336444346555E5C66717B818687888B8D8E8F8F8C888584
8B92979797999C9CA1A4A7A9ACB0B0AEAEAFB0B1B2B1AFAEADADADAEAFB0B0B0
AFAFAEAFAEADACAAAAA9AAABADADABA9A8A39C9798999793908F8D8E9295938F
8A898683838485857F786D6158474A483A38295C9E9D9D9B9D9E9E9D9C9B9B9C
9C9C9B9B9A9A9A9A979797979797979795949496959493949191
9797979797979898989899999898989898999A9A9A999999999A9A9A9A9A9B9C
9A9C9A999A9B98662535454A4A4E59636E7A84868787898E8D8B8C8C82777A85
858C908F8C8D8D8C979EA3A5A8ADB0AFB2B2B3B4B4B3B1B0AEADADAEB0B2B3B3
B4B3B1B1B0AFADACACADAFB2B4B2ADA9A09C97949596938F8A898786898E9090
8C8A878484878786817F71665F4B4B4635322965A09C9E9D9F9F9F9E9D9C9C9D
9C9C9B9B9A9A9A99989898989897979795959596959493949393
9696969696979797989999989898989998999A9A999998989A9B9B9B9B9B9C9D
999C9A9A9B9A9B722F344150524B556A717E87888887888B8A8A88827B76797F
7D8285817E7D7C79848F989A9BA1A8ABB1B0B1B2B3B4B4B3B0AFAFB0B2B4B6B7
B9B7B4B2B1B0AEACADACABABAAA8A39F94908B88898B89878283817D7B80888E
8A888482858889878581756A5E4B5145332D2B6DA19C9F9E9F9F9F9E9D9C9C9C
9C9C9B9A99999898979798989897979796959595959393939493
9696969696969696999999989798999A9798999A999898989A9A9A9A999A9B9C
9A9C9B9D9C999D7A33363D484F505865707E888989888686888C8678757D7A6E
7378797470706F6C6F7E8A8B8A919BA2AAA9A9ABAEB1B3B4B3B2B1B1B4B7B9BB
BAB7B3B0AFAEABAAA7A39C9895928F8C8E887F79787A7A7A7C7F7D767074808A
8784808084898A88867D746A55475544352B2F73A19C9F9F9F9E9D9D9C9C9B9A
9C9B9A9998979797979797979797969696959495949392939191
97979796959496979798999A9999999997979898999999999A9A9A9999999A9B
9A9A9D9B999C98893B313B424846566D7E81878986858583897D76797A746C69
716F675F5C626B706A6E767E81848F9A9BA0A6A8AAAEB1B3B4B5B5B6B7B7B9BA
BBB6B0ADABA9A4A0A0968E8D8B82756D64616570757271747C787879746F747E
828081838587878785827B6E574B4E4A37283580A09CA19E9D9D9C9C9C9C9C9C
9D9B9A9A99979899969696969798989895969696959393939393
969696969595969797989898989898999898989999999999999A9A9A9A999A9A
9A999B9C9A9D9B9048323F4448475B717F83898A8784807A7675797E7C757478
74736D645F62676A6F72777D81858C94979CA1A4A7ACB0B2B6B6B6B5B5B6B7B9
B8B3AEAAA7A39F9B99918C8A867A6B625B545158606363657172757778787777
7E7E7E808385878887837B6E57494C493A2A3C8BA29EA09D9D9D9D9C9C9C9C9D
9C9A99999999999B979796969797979794959696959494949393
96959595969696969898989797979899999999999A9A9A9A999A9B9B9A9A9999
9A999B9C9B9C9C97562D3D444747607781858886837E756C70747D8380797A81
7273706B6B72797E828385878B8E929496999DA0A4AAAEB0B5B5B4B2B2B3B4B5
B3B0ABA7A4A09C9A999491908B8176706C6A67646262666A71787C7C7E82807A
79797A7B7E82858689847D725B4A4A453C2A4394A09D9E9C9D9D9C9C9C9C9C9C
9B9A999A9A999A9B989897979797969693949696969594949191
96959596979897969898999898989999999999999A9A9A9A999A9B9B9A9A9A9A
9C9B9B9C9B9A9B9B682936434744607982868581807C726A76767B82837F7F83
878B8D8D8D91959697989897989A9B9A999B9DA0A4A9ADAFB1B2B2B0B0B1B3B3
AFADAAA7A4A19F9D9C989593908C89888083837E7877797A808687827F82827F
777675767B80838488848079624E49423E294A999D9D9D9E9C9C9C9C9C9C9C9C
9D9B9A9A9A99999A99989797979797969395969796959494908F
9696969698989897979899999998989999999999999A9A9A9A9A9A9A99999A9B
9C9C9B9B9B999A9D7D3231454A445E7981858381838077727674767D8385888C
97A0A9ADADACA8A4A4A5A4A19F9F9F9E9E9FA0A1A4A8ACADAFB1B2B0B0B1B0AF
ABAAA9A6A4A2A09FA09E9B9997979A9C9D9E9E9FA3A6A19A918D87817E7D7C7A
76747172798084838784817D67534B413D2A569D9D9F9F9F9D9D9D9D9C9C9C9C
9C9B9A9B9A99999A989897979898989895969797969494939291
979796979898989896979999999898989999999999999A9A9A9A9A9999999A9B
9A9B9A9A9B9A9A9E8B422E444A465F7B7F838181847D747477777C82878C949B
9EA6AEB2B3B4B2B0ACACABA8A5A2A1A1A0A2A3A2A3A7AAABACAFB0AEADADACAA
AAA9A7A5A3A19F9EA1A2A3A2A2A4A7AAAAACADADB1B3AFA99F93898685807975
7573706F767E82818684817B67564F42382E66A09E9F9E9D9E9E9E9E9E9D9D9D
9B9A9A9A9A99999B989797979899999896979797959493939494
979797979697989997989999999898999999999999999A9A9A9A9A9A99999A9A
979C9A989C9B9A9D955930414748607A80837F7F817770777F838A9092959DA5
AEB2B5B3B2B3B4B4B2AFAEADAAA5A3A4A0A2A4A3A3A5A8AAABAEAFACABACABA9
ABA9A7A5A4A2A09E9DA1A5A7A8A9ACAEB1B4B6B4B2B1B0AFA79F96928F88807B
7A797572747B7F808283807866574F40383879A19E9D9E9C9D9D9E9E9E9D9D9D
9B9A999A9A99999A989797979898989897979796959494949494
97979796959697999999999999999A9B99999999999A9A9B999A9B9B9A9A999A
979D9B989C9C999AA06F384144485E7582847F7F82797683878A92999D9FA2A7
A8AFB4B5B4B4B4B1B3AEACADABA5A2A39FA2A4A3A3A5A8AAACAFB0ADACAEAEAD
ACAAA8A6A6A5A2A0A3A7ABADADAEB0B1B2B0B0B1B4B6B3AFA9A8A39C938B8684
83837F78777B80817E817F7866574E3B3D4387A29E9B9FA09C9C9D9D9D9C9C9B
9C9B9A9A9A989798989796979797979797979695949494959191
9595969696969798999998989898989896989998989999989A9A9A9999999A9A
9E99979B9C9A9A9D9C8E483E454955757F84817D80807F84898C92979B9EA4A9
ADB1B4B9B5B7B1B3B1B3A7AAAFA39FA5A2A0A1A4A4A2A4A9ADAEAFAFB0B0AEAC
A7A7A4A2A3A5A3A0A4A9ADAFAFAFAFADADB4B0B8B2B5B6AEABA8A5A29D9A948B
8F877D7776797E83827F7F7B65524D41374A91A19E9DA3999E9E9CA09F9EA09A
9B99999A9C9B9998999898989898989795969897949393949292
95959696969697979797979798989898989A9A99989A9B9B9A9A9A9999999A9B
97999DA09D97979CA08F4E34454553767E82807E828282878B9094969BA2A5A4
A8A2AFAFB9ACADAFAEB0ADA7A1A7AC9E9F9D9D9F9E9DA0A5A7AAADAEAFAFADAB
A6A4A19FA0A2A2A09DAAB0B0ADA7A9ADB7AAB8B2B1BFACA7A7A09FA29D989899
8E87817F7E7E8185837F7E7B64504D4540639D9F9C9EA09F9D9E9B9D9D9DA09C
9F9C9A9A9A999897989897979898979795959696959494939494
959696969696969798989898989999999A9B9A99999A9C9C9A9A9A9A99999A9B
9A9E9F96877975778B815733464050747E7F7E818585858B8F90969DA0A0A2A5
A197837764695D5F697285999F97969F9C9B9C9D9D9C9FA3A2A8ADAFB0B0AEAC
A5A19E9D9FA0A0A1A7ACA4A1A4A5A0938F938C888B88979A9A9DA09E999A9992
908A888987817F8284807E7A604948464E718E8483898E9E9D9F9C9C9C9CA09D
A09D9A9A9A999898989797979898979795959595969694939393
96979797969697979898989899999999989A9A99989A9B9B9A9A9A9A99999A9B
9A9E988778726E696A6A614347404F737F7D7E848888898E9092959BA09F9488
7455432D24191926212B496079959C989A9A9B9D9E9F9FA0A2A9AFB0B0B0AEAC
A49F9C9D9F9F9FA0A3A09C9E95897C5D3F342A1F2927324860748B9596999C99
928C8B8E8C84808182807F7B5F43444B5A68706A6C72788F9DA29E9C9C9C9F9C
9E9C9A9B9B9A9A9A989897979898979795959696969594949393
9797979797979798969696979797989897999A9A999A9A999A9B9B9A9A9A9A9B
999C917F7B8382786662665444425375817C7F868B8B8D8F8E939492958F6E4A
3A53633E303F44404F2052866F65819C9A9A9A9B9C9E9E9DA2A8ADADADADABA9
A09D9B9C9E9E9E9E9999999270646C552D3932403B25294C503E42627E8A8E90
918C8B8F8F8986877E7E807D5F3F445664656B72777A787E97A29F9C9D9C9E9B
9C9A9A9C9C9B9A9B999898989898979795979897959494949494
9697979797979898979797979798989897999B9B9B9B9A999B9B9B9A9A9A9B9C
9C9D917F7D8B8E867E706B6148465576817D80888C8F918F8B8D92928465432E
4F837D382A787854882E5AAD9E68628C999C9C9B9A9B9B9A9DA3A7A6A6A7A5A1
9C9B99999C9E9E9C9BA08D71617F9B79377877609B30366C8D55292F5273868E
928C8A8D8F8D8A887D7E807D5C39456272717B83888581778F9F9E9B9E9D9D9C
9C9B9B9C9C9A999A9A9998989898979695979897959393959393
96969797969797989999999999999999989A9B9A9A9B9B9A9B9B9B9B9A9A9B9C
9C9C917F79828F9490857A75604C5277817D81888C92948F88868A8971514750
67889649262E2F212A367FADAF996D679099A09F9C999896979DA1A0A1A29F9A
98999896999FA09D9A9F79667DA5B38D3E312A232A2C37768D6E4A35354F7289
8D8986888D8E89847E7F807B59384C7581808787877475768A9D9D9B9F9E9D9C
9D9C9B9C9B99999A9A9998989897969595969796959494949393
95959696969697989898989898989898989A9A99999A9A9A9B9B9B9B9A9A9B9C
9C9A8F7B6A6C7F9291938D8C7D555078817D82888C94968E8688827264646E77
75787D5F3E37262F394C8F9C8F8B726E8393A2A49E99949293999D9E9FA19D97
9698979498A0A39EA096686B8B91989651382E2A2E374B77756F6F6D5E556173
848281838A8E89817D7F7F7B5B3D588986868B86805A5F748A9E9E9B9F9E9D9D
9D9B9A9A9A999A9B9A9998989796959495949495959594939494
969695959596979798979798999A99999999999999999999999B9B9A9A9C9C9A
999B8E7C7C6E77878D96939691694A78837E82898C91938B897E726C6C737F8A
8C8A8278706C68646F6F787F797475737495A4AA9A93928D93989B9C9D9E9A93
8F949693949DA4A5A3806D6E6F767A716B656061666D767D858C88807E776963
6B71777D868E8A7F7F77807F58477D888C8E887F7E696E7B8AA09A9CA19CA09C
9D9C9B9B9B9B9A999A9998979897979695969696959595969393
969696969696979797979798999999999A9A9A9A9A9A9A9A989A9A99999B9B9A
999C8A837C707F858694909497794E75867E80898C8F908D857D7675787C8389
9194959492918E8A8F8F95968C878C8F899FA6A594918F8D92979A99999B9994
9091929191959EA6A2948E8A818086878C8B8E93989998968F918A8385857E7A
7171747B84898783817B7F7E5D58898E918C7F7B7E70787F8BA09B9C9F999E9B
9D9C9B9B9B9B9A9A9A9A99989898989796969696959595959595
96969697979797979797989898989999999A9A9B9B9A9A9999999A99999A9B9A
999C87887F75878685949091998A5771867D7E888C8D8F908883808285868687
8E949A9DA0A09E99939397989291989D9DA5A69C8E8F8C8D959A9C99989A9A98
928E8E908D8B95A2A4A2A09B95929293919192949899959092908883888D8B89
837B787E83838284807E7D7E636B9290898980817E707E818FA19F9E9F9A9E9D
9E9D9C9B9B9B9B9A9B9A99989898979796969796959595959292
9696969798989897969798989898999A98999A9A9A9A99989A9A9A9A9A9B9B9B
9A9C8B85857B888A8A9393919090636D827C7D868C8E8F918D8A8A8D8F8F8D8C
8D919394959695928E8C8E93979A9D9FA2A0A0938C908B8F979B9C9A999B9B98
938F8E8F8B868C98A2A5A29EA1A09A999B9A9794959797949A98949194989693
92877F818281808380807B7E66718D8B8B8D84877D71818295A1A09FA09C9E9D
9E9D9C9C9C9B9B9A9A9998989897979696979796959595959494
9797969798989897969798989898999A99999A9B9B9A99999A9A9A9A9A9A9B9C
9B9B937F8982838E8E9098958A90726F7F7F80858C8F8E8D8B8C909599999999
989A9996969999989998979A9E9F9FA0A39C9A8E8B8F8D9196999B999A9B9993
92908F8E8B898A8E98A6A8A5A6A4A2A6A0A1A19F9E9E9D9CA3A2A1A09F9F9D97
928B83808183838282807B7D6972898D9C9684847D788484989E9D9E9F9E9E9C
9E9D9C9C9C9B9B9A9B9A99989897979697979796959595959696
9897969698999898979898989899999A9A9A9B9B9B9B9A9A9A99999A9A9A9A9C
9C9C99848987818D8F8F9B9A8D8E81797D8182858C8F8C8A8B8F969CA1A2A2A2
A5A7A6A4A3A6A6A4A6A9A7A3A19E9EA3A59C988D8D8C8F9295999B9B9C9C9790
8F908F8D8D8E8E8C92A1A7A7A9A8A6AAA4A6A8A9A8A6A6A8A6A4A4A39F9F9D97
928E878182858481827E7B7C727A929D9B988A857B7B81899C9C9D9E9F9F9E9C
9E9D9C9B9B9B9B9A9C9B99999998979796979796959595969393
999795969798999898989898999A9A9A9A9B9B9B9B9B9B9A9B99999A9A9A9B9C
9D9D9A93838884878E9095949287827E7D8080858E8E8A8D92959A9FA5A7A7A6
A8AAACAAABADACAAACB1AEA9A7A4A2A7A39E9992928B9192959B9F9E9E9D9891
8F8E8D8D8F919291949BA0A4A9ABA8A7A8A5A6A8A8A6A8ADACA7A7A7A3A3A29A
95918A8585868480827D7C797880959C90938D84797D7F919F9C9F9F9E9F9E9D
9D9C9B9B9B9B9A9A9C9B9A999998979796979796969596969696
9997959597989998999898989A9B9A999A9A9A9A9A9A9A9A9C9A9A9B9B9B9C9D
9D9F98A17D8889818C918B88917C7A7C7D7D7D86908E8A9198989A9EA5ABACAB
A6A9ABACADB0B0AEABAFABA9ACA9A4A59D9D9997978B9492949BA0A09E9C9892
918E8C8E8F919396979B9FA4A7A9AAAAADA8A7ACACA8A9AEAEA7A7A8A5A6A49A
958F898686868482837F7D75787C8A89928F867A7886839A9F9B9F9F9C9C9B9C
9D9C9B9B9B9B9A999B9A99989898979696969796969596969696
9898989796969798979797979899999A989899999A9A9B9B9A9A9A9B9B9B9B9B
979F99A092808D88908F8A8C888779797D7F83888B8C8F9195979B9FA5AAAEB0
AAABADB0B1B0AFB0AFAEAEAEACA7A3A29E9D9B979391919294999D9D9C9A9A99
8E8F8F8D8F93979A9C9D9E9FA0A2A6A9AAABABABA9A9AAABABACADABA8A6A29F
97918C8C88828286867B7B77737C8386888A8B75807F90A09F9F9F9E9E9E9D9D
9F9E9D9B9C9D9C9A9A99999A9A9A999897979796969796959696
9696979796969697989898989899999A9A9A9A9A9A9A9999999999999999999A
9A9C9C9C978A868C8F8F878C8B8A7F7D7C7E8287898A8D9093979DA1A5A9ADB0
ADACADAFAFADACADAFAFAEACA7A2A1A29F9D99969391919093979C9D9C999591
8E8D8D8E8F9396999A9C9EA0A1A1A2A3A8AAABACACACACACAAACACAAA8A5A29F
99948F8D89848486847C7D7877808384878B8B7C7F88979F9E9E9E9E9E9E9E9E
9F9E9D9B9C9E9D9A9A9999999999989897989897969797969595
959698989897979798989898989999999A9A9A9A9A999999999A9A9A9A9A9A9A
9D9A9E999D97818C919384898C8B877E7C7F83888A8C8F92959BA1A5A8ABAFB2
B2B1B0B1B0AFAEAEAFAFADAAA5A1A2A5A19E9995928F8E8D93969A9C9D9A958F
8D8A898C8E9094989A9C9FA2A3A3A3A2A4A5A7AAABABAAA9ABACACAAA8A6A4A1
9C99948E8A888786847D7D797B868784858E8B8381949E9E9E9E9E9E9E9E9E9E
9E9E9D9C9C9E9D9B9A9A99999897979897989896969797959595
9697989898989899999999999999999999999A9A9A9A9A9A9A9A9A9B9B9B9B9B
9D989F9A9E9E87849097848185888A7B7B7E83888C8F93979A9EA3A7A9ACAFB2
B4B2B1B2B2B1B1B1ACABA9A7A4A3A5A7A3A09B948F8C8B8B9597999999989591
8C8784888B8D91979B9DA0A2A4A6A6A5A3A3A4A6A9A9A8A6A9AAABA9A8A7A5A3
9E9D98918D8B8986867F7B787F8C8A8584938B838A9CA19EA1A0A09F9F9E9D9D
9D9D9C9B9C9D9D9B9A9A9A999796979897989796969696959594
9696969696979899999999999999999999999A9A9A9A9A9A9A9A9A9A9A9A9A9A
9B979D9D9A9E947C8A97867A7D848C7D797D82888C8F94999EA0A2A5A8ABADAF
B2B0AFAFB0AFAEAEA7A6A3A3A4A6A6A5A3A09B938C8A8B8D9597989796959392
8E878385888A8F95999DA1A4A6A7A7A5A7A6A6A7A8A8A8A7A7A8A9A8A7A7A6A5
A1A09B94908E8B86867F7B77818C86818797897F969EA09FA0A0A09F9E9E9D9D
9D9D9C9B9B9C9C9B9B9B9B999897989997989896969796959595
979797969697999A9A9A9A9A9A9A9A999A9A9A9A9A9A9A999A9A9A9B9B9B9B9B
9A989BA0989C9D7E84948C7A79808D857B7E848A8D90959AA1A2A3A6A8ABADAE
B0AEADAEAEACAAA9A8A5A2A3A7AAA8A3A19D97908B8A8D909094989999999897
928C878586878C91959DA5A8AAAAA8A5ABA9A8A7A7A8A8A8A9AAAAA9A9A9A9A8
A2A19D9793908C8785807B7881867E7D8D9785839E9E9E9F9E9E9E9E9E9E9E9E
9D9D9D9B9B9C9C9B9B9B9B9A9998989899999998979897969595
979898989898999A999A9A9A9A9A9A9A9A9A9A9A9A9A9A9A9B9B9B9B9B9C9C9C
9B9A9B9E9A9C9E8C818F917D767683887B7E858A8E92989DA1A3A6A8AAABAEAF
B0AFAEB0AFACA9A7AAA7A4A5AAAEABA6A09A928B898B8E919093979A9C9E9D9B
95918C878485888A909BA5AAACADABA8ABAAA9A8A8A8A9AAACADACABAAABAAA9
A4A29E9B97928C8884807C787C7E7A8195917F909FA09F9D9E9E9E9E9E9E9E9E
9E9E9E9C9B9C9C9B9B9B9A9A9A99989799999997979797969595
9596989898979798999A9A9B9B9B9A9A9999999A9B9B9B9C9A9A9A9A9A9A9A9A
9D9B9B9C9D9D9B997E89927D71697483777C82898D92989E9EA2A6A9A9AAADAF
B0AFAFB1B1AEAAA7A9A6A4A5ABAFADA8A2998F88898C8E8F959696989B9D9B98
96948F88838384848C96A1A6A9ACAEADAAABABAAA9A9ABACACACABA9A8A9A9A7
A4A29F9D9A938D8985817C7677787A899A8C7B9C9DA1A29CA0A0A0A09F9F9F9E
9E9F9F9D9C9C9C9C9B9A9A9A9A9A989798989896969696959595
979797979798989899999999999A9B9C9B9B9A9A9B9C9B9B9C9B9B9C9B999A9C
9D9B9B9C9C9B9B9D8D828D8E81676A7B797A80888D94999A9AA1A6A7AAAFB0AD
ADAEB1B1ACAAADADABADA8A5ADAFAAA79B91888585878C919398979EA19B9A9C
9493908A827E828A8A919DA7ADAEAEAFAFACABADACA8A8A9ACA9A8AAAAA7A7A8
A8A39E9A97918D8A877F7A7B6A74869490828DA1A19EA19F9F9F9FA0A1A19F9E
9E9E9E9D9D9E9D9B9B9A9A9A9B9B9A99989A9998979798979695
979797979898989899999999999A9A9B99989898999A99999B9A9A9B9A999A9C
9B9A9A9B9B9A9A9B99868393917C6B66777B81878D94989A9FA3A8A9ACAFAFAD
AFAFB1B0ABAAADADABB0AFABAEAFABA69D8D818184858A91919A9A9EA2A0A09C
9B98938D837C7C80858B97A4AEB1B0AFAFAFAFAFACA9A7A7A9A8A7A9AAA9A8A7
A3A19D9996938D8884817C756F819498858695A2A1A0A29E9F9E9E9F9FA09F9E
9D9E9D9C9C9D9C9A9B9A9A9A9A9A9998989A9A98979798979696
9797979898989999989899999A9A9A9A999999999A9A9A999B9A9B9B9B9A9B9C
9B9A9A9B9B9A9A9B9D8E7E94948A7B6F737B81868D93979BA3A5A8ABADAEAEAD
ADADAFAEAAAAAEAFADB2B5B1AEAFACA497857A8086868991949E9D9EA2A4A49F
A19C9690877D797A80838C9CA9AFB0AEB0B3B5B2AFACAAA9A8A8A8A9AAABA9A6
A1A09C9896938C8581807F777C8A948D7F8F9FA29FA0A19EA09F9E9E9F9F9F9F
9D9E9D9C9C9D9C9A9B9A9A9A9A9A9897989A9A98979798979796
96979798989999999898999A9A9A9A999B9B9B9B9B9B9B9B9B9B9C9C9B9B9C9D
9B9B9B9C9C9B9B9B9D97848D8D8B8C80717A80858D93979DA4A3A5AAADACABAD
AAA9ACADAAACB0B0B1B3B6B3AEAEAA9C887E7B838A8A8C9199A1A0A1A4A4A7A6
A39E99948C827E7F7F7E84919EA8ADB0B0B5B7B4B0AFAEADACACAAA9AAABA9A5
A3A29D9794928A81847E7C7A888A8C84879AA29E9D9F9FA0A1A09F9F9F9FA0A0
9E9E9D9C9D9D9C9B9B9B9A9A9A99989798999A98979797979797
969797989899999998999A9A9A9A9A9A9A9A9A9A9A9A9B9B9B9C9C9B9B9B9C9D
9B9C9C9C9C9C9C9BA09E8E878B8B937F74797E848C92989DA3A1A3A9ABAAABAD
ABAAADAFAEB0B3B2B6B4B7B5AFABA08E7E7F84898C8D90959CA2A5ADB0A9ADB3
A8A39D989086848683808088939EAAB3AEB3B5B2AEAEAFAEAEADAAA8A8A9A8A6
A6A39D9793908982867F79778A8B8A87939FA09C9F9F9DA1A1A09F9F9E9FA0A0
9E9F9E9D9D9E9D9B9C9B9B9B9A9A989798999A98979797979797
979797989898999999999A9A9A9A9A9A9A9A9A9A9A9A9A9B9A9B9B9A9A9B9B9B
9B9C9C9C9C9C9C9B9EA09787888B9A8D7C777B868B91989C9FA0A2A7A9A9ACAF
AFAEB1B3B2B4B6B4B8B6B7B5AFA4938280878E908F90959B9FA3AABBBFB3B5BE
AEA7A09B938A888B878280828893A2B0AFB2B4B2AFAEAFB0AFACA9A8A7A6A6A7
A5A19C96928D888481827A798B8D87889B9F9E9EA3A19DA1A0A09F9E9E9E9E9F
9F9F9E9D9D9E9D9C9C9B9B9B9B9A999798999A98979897969796
97979797989898989A999999999A9A9A9A9B9B9B9B9B9B9C9A9B9C9A999A9B9A
9A9C9C9B9B9C9C9A9BA09D8E8389999F86767A878A8F989A9C9EA2A4A6A8ACAF
B1AFB1B3B2B4B7B6B7B7B4B0A8998982898D95999694989FA1A3A9BBC0B3B2BA
ACA39D9B96908E928D878382848997A4AEB0B3B4B3B1B1B3B0ACAAAAA7A3A3A7
A39E9996918A85857F8179808D8B828D9E9F9EA0A3A19EA09FA0A09F9E9E9E9F
9E9E9E9C9D9D9D9B9C9B9B9A9A9A989798999A99989897969696
97979797979898989A99999999999A9A999A9B9B9A9A9A9B9B9C9C9A9A9B9B9B
9A9C9D9C9C9D9C9A9EA09E9683888D998D767989898D9898999DA1A2A3A7ABAE
B0ADAEB0B0B3B7B6B5B5B0A9A08F84888E8F979F9E989AA1A1A1A2B1B6A9A7AD
A59C979999969598938D888684868F9AAAABB0B5B5B2B2B5B2ADACADA9A1A0A5
A29C989690878283847F73838E87829EA0A0A0A0A09F9E9FA0A0A1A09F9E9F9F
9D9D9D9C9C9C9C9A9B9A9A9A9A9A989797999A99989897969695
979798989898979799999999999999999B9B9A9A9A9A9A999B9C9C9C9A9A9A9B
9B9C9D9D9C9C9C9C9E9D9B9F8B809492867779838A8E9199979CA1A3A6AAACAC
ADB0B1B2B4B7BABAB7B4ADA3958B8A8D95949EA7A3A2A29B9EA2A3A4A8A7A3A2
A19E9790909AA2A39B95928D84868E90A8ABB0B3B4B3B2B1B2ADAAABA9A5A3A4
9F9C98928C878380817F7983928887A0A2A0A0A1A1A0A0A19F9F9F9FA0A0A0A1
9F9D9B9B9D9D9D9C9B9B9B9B9B9A9999999A9A99989897959696
9898989898989898989899999999999A9B9A9A9A9B9B9A9A9B9C9C9C9B9B9B9B
9B9C9D9D9C9B9B9C9B9D9DA18F819092897A7B848A8C8D94989B9EA1A5A9AAAA
AAAFB3B4B5B6B7B6B4B0A89E928B8B8F929DA5A6A7A49C94959B9FA3A5A3A1A3
9B9A8E89929599A7A29C989186878E91A3A9AFB2B3B3B2B1AAA9A7A6A6A5A4A2
9D9A95908B868381837F77819086849CA1A09FA0A1A0A0A0A0A09F9F9F9E9E9E
9F9E9C9C9C9D9C9C9B9A9A9A9A9A9998999A9998979797969797
9998989898989899989898999999999A9B9A9A9A9B9B9B9A9C9C9B9B9C9C9B9B
9B9C9D9D9C9B9B9B9A9F9DA194848D938D7B7A81878B8C9298999B9EA3A7A9A8
ACB0B4B5B4B4B3B3B4B0A79C918B8D929AA5A49EA09B95988E92979CA09E9C9D
99948C818093A09BA3A09D9488868D909DA7AFB1B2B4B4B2A9ABA9A5A4A5A39D
9C98928D89868483847E788290868399A1A09FA0A09F9FA0A1A0A09F9F9E9E9E
A09F9E9D9C9C9C9C9C9B9B9B9B9B9A999A9A9997969797979696
9999989898989999989898999999999A9A9A9A9A9B9B9B9B9D9C9B9B9C9D9C9B
9B9C9C9C9C9B9C9C9BA09C9F99898B9394807A7F858A8D9395979A9EA2A6A7A8
ADAFB1B1B2B3B4B4AEAAA2968B868A8F949B9E9B8D7362637B8B989EA09E9A9A
988F7344294478959A9E9F9588858A8F98A5AFB0B0B3B4B1ACACAAA6A5A4A09C
9C97908B88878685827E7B858F86879CA1A09FA0A09F9F9FA0A0A0A0A0A0A0A0
9F9F9F9E9D9C9C9D9D9C9C9C9C9C9B9A9A9B9A98989898979696
9999989898989999989898999999999A9A9A9A9A9B9C9C9B9C9B9B9B9C9D9C9B
9A9B9C9C9C9C9C9D9DA09C9E9D8E888E98837D7F858A8C9191959BA0A2A4A7A9
ACACACADB0B3B3B2A9A8A2978C878A8F9693938562402E264F6D878E91949594
8D895E3229294377909A9E9489858A9098A4ADAEADB0B1AFABA7A6A6A5A19E9E
9B968E8A8888878681807D838A868CA1A2A09FA0A0A09F9FA0A0A0A0A0A0A0A0
9E9E9E9E9D9D9D9E9C9B9B9B9B9A9A99999A9A99999998969696
999898989898989999999999999999999A9A9A9A9B9C9C9B9C9B9B9B9C9C9C9B
9B9C9C9C9C9C9D9E9D9F9D9E9F958A8A8E7D7A7F858B8B8F8F949AA0A2A3A6A9
ACADADAEAEAEACA8ABABA69D928B89898E8B8A7C696D7A7A6E7D85858A908F8A
838676717E766468899699918A8A8E949EA7ADAEAEB0B0AEACA7A5A6A49F9C9C
99938C898888878583817C7E868A93A3A2A09FA0A09F9F9FA1A0A09F9F9E9E9E
9E9E9E9D9E9E9D9D9C9B9B9B9B9B9A9997999998989897959494
98989898989898989A9A9A9A9A9999999B9A9A9B9B9C9C9B9B9B9B9B9B9B9C9C
9C9D9D9D9C9C9D9D9D9E9F9FA09D94928879797F868B8C8F8F92989EA1A2A5A8
AAADB0AFADAAA7A4A7A7A49E968F8680848989828393A3A7A6A193878786807B
8A8F98979197968585909088898F959CA5A8ABADAFB0AFADACA9A6A4A29F9C9A
97918B898A8A898684817A7D8A959CA2A2A09FA0A09F9E9FA0A09F9F9F9E9E9E
9F9E9D9D9E9E9D9C9D9C9C9C9C9C9B9A97989897979797959494
97979898989897979A9A9A9A9A9999999B9B9A9B9B9C9B9B9A9B9C9B9B9A9B9C
9E9E9E9D9C9C9C9C9E9EA09E9FA3A09F8E7F7D81868B8C8F9192969C9FA1A3A6
A5AAAFAFADABABABA7A6A5A3A19B8F857E8684848F969BA4A7A6A09A958F8F94
979EA6A2958F8D88828A868088939BA2A6A6A8AAADADACABA7A7A5A09FA19F9B
96918B8A8C8D8B8884807A8093A2A4A1A2A09FA0A09F9E9E9F9F9F9FA0A0A0A1
A09E9D9D9E9E9C9A9B9B9A9A9B9A999899999897969798979797
9998989798999A9B9A9A9A9A9A9A99989A9A9A9B9B9B9A999C9B9A9A9B9C9C9B
9D9C9C9C9D9D9D9D9F9F9F9F9F9F9F9E987F7880868C8E90919193999FA3A4A4
A7A9AAAAAAAAAAA9A9A6A4A5A49F999588807C81868B95A1A1A3A6A6A5A5A6A8
A4A19C97949089837B7E8591999C9FA1A7A7A8ABADACA9A7A2A2A19E9E9E9C99
95938F8B898A888686827B839F9EA0A0A2A09E9E9FA09F9D9E9E9E9E9E9F9F9F
9E9E9D9C9C9B9B9B9B9C9C9B9A9A9A9898999A99979697989796
99999999989899999A9A9A9A9A9A99999A9A9A9B9C9C9B9A9C9B9A9A9B9C9C9B
9C9B9B9B9B9C9C9C9C9D9D9E9E9E9E9D9A837B81868B8F91929293989DA1A2A2
A5A7A9A9A9A9A9A8A7A6A5A6A6A39E9B9B948F8F8F91979EA1A2A4A8A9A8A8A9
A7A39D999795908B8D90949A9D9EA1A3A7A6A7A8A9A8A5A3A2A2A09E9D9D9B98
94918E8C8B8A888785817A859F9E9F9EA1A09FA0A1A09F9D9D9D9D9E9E9E9E9F
9D9D9C9C9B9B9B9B9B9C9C9B9A9A9A989A999998989897979593
9899999999999898999A9B9B9A999A9A9A9A9A9B9C9C9C9B9C9B9B9B9B9C9C9C
9D9C9B9C9C9D9D9C9D9D9E9FA0A09F9F9C887D80868A8F92939394979B9EA1A1
A2A5A8A8A8A8A7A6A4A3A4A5A5A29F9EA29F9D9B9B9B9C9EA19FA1A7AAA9A7A8
A9A5A09B9A9B9895979B9D9D9D9FA3A5A7A7A7A7A8A7A5A3A3A2A09E9D9C9996
94908D8D8C89878786807A87A0A09F9EA1A0A0A1A1A19F9D9E9E9E9E9E9E9E9E
9E9E9E9D9D9D9D9D9B9C9C9B9A9B9A989A999898999998969694
97989899999A9999999A9C9B9A999A9B9999999A9B9C9B9B9C9C9B9C9C9C9C9C
9D9C9C9C9D9D9D9D9E9FA0A1A1A1A0A09D8D7D7F858A909294959697999DA1A2
A2A5A7A7A7A6A5A3A2A2A3A4A29F9C9C9B9EA0A1A2A2A19FA29D9DA4A9A7A5A5
A8A7A39E9C9C9C9B989C9C9A9B9FA2A3A6A6A6A6A7A7A7A6A3A2A09E9D9B9895
96908E8F8E88858688817B8BA0A1A09FA1A1A0A1A1A19F9EA1A0A09F9F9E9E9E
9F9E9E9E9E9E9D9D9B9C9C9B9A9B9A999A999999999998979896
9898989899999A9A989A9B9B9998999B9999999A9B9C9B9B9C9C9C9C9C9C9C9D
9C9B9B9B9C9C9C9C9E9E9FA0A09F9E9E9F927D7D868A939395979898999DA1A3
A2A5A7A7A6A5A3A2A3A3A4A4A29E9C9C9CA0A2A3A3A4A29FA49E9DA2A7A7A6A6
A7A8A6A19C9B9C9D9C9D9D9B9CA0A1A0A3A3A4A4A4A4A5A5A2A09E9E9C9A9795
96918E908F8986878A817B8E9FA1A1A0A2A1A09FA0A0A0A0A0A09F9F9F9F9E9E
9D9D9D9C9C9C9C9C9B9C9C9B9A9B9A99999A9A9A999898989896
9A9999989898999998999A9A9999999A9A9A9A9B9C9C9C9B9B9C9C9C9C9C9C9C
9C9C9B9B9C9D9D9C9E9E9E9E9E9E9D9DA1987F7D858A949596999A99999DA1A3
A2A5A6A6A5A4A3A1A2A1A2A3A29F9D9DA0A1A1A0A0A2A2A2A5A2A0A4A7A9A9A9
A7AAA9A39D9B9C9E9C9C9C9C9EA1A2A1A2A2A3A3A1A1A1A2A09E9C9C9C999694
94918F908F8C898989807B919EA09FA0A1A09F9E9E9FA0A09D9D9D9E9E9F9F9F
9E9E9D9D9C9C9C9C9B9C9C9B9A9B9A9998999B9A989797989896
999999999999989899999A9A9A9A9A9A9B9A9A9B9B9C9C9B9A9B9C9C9B9B9B9C
9D9D9C9C9D9D9D9D9E9E9E9E9E9E9E9FA09C827D83869395969A9C99989CA0A2
A1A4A5A5A4A4A3A2A09FA0A2A19F9D9D9D9D9D9E9FA1A3A5A6A6A6A5A6A8A8A6
A9AAA8A39E9D9E9F9898999C9D9EA0A3A1A2A3A2A09F9FA09F9C9C9D9C9A9796
949290908F8E8C8A877F7C969EA09E9FA09F9F9E9E9E9F9F9D9D9D9E9E9E9F9F
9F9F9E9E9D9D9D9D9A9C9C9B9A9B9A9998999999999897979896
9697999A9A9A99999A9A9A9A9B9B9B9A9B9A9A9A9A9B9B9A999A9B9B9B9A9A9B
9C9B9B9B9C9C9C9C9D9D9C9C9D9E9E9F9F9D837C80829195969B9D9A989B9EA0
A0A2A4A4A3A4A4A3A19FA0A2A2A09E9D9A999B9FA1A1A2A5A7A9A9A6A4A5A4A1
AAA9A5A19E9F9F9F9897999B9B999CA19FA1A2A19F9E9E9F9F9D9C9E9E9B9898
959492908F8F8D89857E7E9AA0A09E9F9E9F9F9F9F9E9E9E9F9F9F9F9E9E9E9E
9E9E9E9D9C9C9C9B9A9B9C9B9A9B9B9999989898999997959795
98989898989999999A99999A9B9B9A99999A9A9A9B9B9C9C9A9B9B9B9B9B9B9A
9B9B9B9C9C9D9D9D9D9D9E9E9E9E9E9E99A38C7C81868F94999B9D9C9A9A9DA0
A3A5A5A4A2A3A2A1A2A2A3A2A09D9997989B9C9C9DA1A4A4A7ABA5A6A8A5A4A1
A3AEACA29F9E9DA09A9B9A96979C9D9B9C9F9E9DA09F9B999D9D9D9E9E9C9A99
98939091918E8C8C857687A39EA2A09FA0A09F9FA0A09F9FA0A09F9E9E9F9E9D
9E9D9D9C9C9C9C9C9C9B99999999999898989999989897979696
97979797989898989A9A999A9B9B9A9A9A9A9A9B9B9B9C9C9B9C9C9C9C9C9C9B
9B9B9B9C9C9C9D9D9E9E9D9D9D9D9E9F9CA2917F7F878E92989A9D9E9C9C9EA0
A1A4A5A4A3A3A2A0A2A19F9D9A99999A9C9B9C9EA2A5A5A2A3ACADAFAA9F9D9B
A3ABA8A09F9E9C9E9B9A999898979798999C9B999B9C9A9C9A9A9B9C9C9B9A98
98959291908D8A8881768CA19EA29FA0A0A09F9FA0A09F9F9F9F9E9D9D9E9E9C
9E9E9D9C9C9C9C9D9C9B9A999999999898989898989797969696
99999999999999999A9A9A9A9B9B9A9A9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B
9B9B9B9C9C9C9C9C9F9E9D9C9D9E9FA09EA098847D868C8F96999C9E9E9E9FA0
A0A3A5A5A4A2A09E9E9E9C999695989B9B9B9B9D9FA1A5A8A6ABABADA8A0A3A4
A9ACA8A3A29F9C9D9D999799989494989A9E9C999998989B999A9B9C9D9C9B99
98979492908E8A867C78959E9EA19FA0A0A09F9FA0A09F9FA0A09F9E9E9F9F9D
9E9D9D9C9C9C9C9C9B9B9A9A9A9A999998989898989797969696
9A9A9A9999999A9A9A9A9A9A9B9B9B9A9B9B9B9B9B9B9B9B9A9A9A9A9A9A9A9A
9B9B9B9B9B9C9C9C9F9F9E9E9E9E9FA09E9D9F8A7A82898E94979A9C9E9F9FA0
A2A4A5A5A4A19E9D9A9C9C9A979597999F9D9EA0A1A1A2A4A39E999EA1A2A7A5
9C98939193979CA1A29E9B9A9897979A999D9B98989694969A9B9C9C9D9D9C9A
96969491908E8983787D9E9D9EA19EA0A09F9F9F9F9F9F9F9FA09F9E9E9F9F9D
9D9C9C9B9B9B9B9B9B9B9A9A9A9A9A9A98989898989797979595
99999998989899999A9A9A9A9B9B9A9A9A9A9A9A9A9A9A9A9B9B9B9B9B9B9B9B
9B9B9B9B9B9B9C9C9D9E9E9E9E9E9E9E9D9CA28F7B7E858D9396999B9D9FA1A2
A4A5A5A5A29F9C9B999C9E9C999697999E9C9C9EA09B938D918A858B8F91948B
89847F7C7D848D929A9A98959596969496989693949492939B9C9D9C9C9C9A97
9495938F8D8B847D7785A39D9FA19E9FA09F9E9E9E9F9F9E9D9E9E9C9C9D9D9C
9D9D9C9C9B9B9B9C9B9B9B9A9A9A9A9A99999998989898979696
99999999999999999A99999A9B9B9A999A9A9A9A999999999A9A9B9B9B9B9A9A
9B9B9B9B9B9B9B9C9C9C9D9E9E9D9D9C9D9CA196817B81899194989B9C9EA1A3
A4A4A4A4A19D9A999A9C9E9C98969799989A98938E898786898683837D7E8279
797B80817E808483878A8C8D9196959195979492949594959D9E9E9D9C9D9A97
979693908C877F787B90A29E9FA09E9EA09F9E9E9E9F9E9E9C9E9E9C9C9C9D9C
9E9D9D9C9C9C9C9C9A9B9B9B9A99999999999999989898989898
999999999A9A9A9A999999999A9A9A9999999A9A9A9A9A9A999A9A9A9A9A9A99
9A9A9A9A9B9B9C9C9C9C9D9D9D9D9D9D9E9E9E9C8C7C7E838D91979A9B9C9EA1
A1A2A3A4A19C989797999A98959292939090897E77777775747776716568726B
5862707471757B797373767B838888868A8F9191959696989D9F9F9D9C9D9A96
9894918F8A837A75829B9F9F9EA0A09FA09F9E9E9E9F9F9F9D9E9F9D9C9D9E9D
9D9D9C9C9C9C9C9C9A9B9B9B9A99989999999998989898989797
9898989898999999999999999A9A99999A9A9A9A9A9A9A9A9B9B9B9B9B9B9B9B
9A9A9A9A9B9B9C9C9E9E9D9D9D9E9E9F9F9F9CA1947D7D7F898E959899999B9E
9F9FA2A4A19B979692949696938F8C8C817769616567584441494E4B41465148
434A524D454D5B5E5D57565C63666768737E878D939596989B9E9D9B9A9B9894
94908C8C877E767387A29C9E9D9FA19FA1A09F9E9F9FA09F9C9D9E9C9B9C9D9D
9C9C9B9B9A9B9B9B9A9B9B9B9998989899999898989898989594
9A9999989899999A9A9A9A9B9A9A9A999A999A9C9C9B9B9B9A9A9B9B9A9A9998
9B9C9C9B9B9B9B9A9E9D9C9D9D9D9D9C9E9D9DA19D887A7E80878F95999B9A99
9B9FA3A4A29E98939194948E85796E67625C5A616A6B635B595F656A6F737473
716962605B56565A5C62686C6E69676C747B858D9397999A9B9B9C9C9B999694
908F8E86847B717F999D9F9E9D9FA09F9E9F9F9F9E9D9D9D9F9F9E9E9D9D9D9D
9C9C9C9C9B9B9A9A9C9B9A9A9A9A999898989897969697979494
99999999999A9A9B9A9B9B9B9B9A9A9A9999999B9B9A9A9B9B9B9A9A9A9A9B9B
9A9B9B9B9B9C9B9A9D9D9D9D9E9E9E9D9D9F9D9E9F9280797C828A909396999B
9A9EA2A4A3A19C979393918B847E77726E6E72777A7B7A7A6F7377797A7C7E7E
827E7B77726F72777B7973707172788283878D929496999A9A9A9A9998969492
8F8D8B827E7875879A9EA09E9D9F9F9E9E9E9D9E9F9F9E9D9D9C9C9C9C9B9C9C
9C9C9C9B9B9B9A9A9B9A99999999989897989797969696979595
98989898999A9B9B9A9A9A9A9A9A9A999998999B9B9A999A9A9A9A999A9B9C9C
9A9B9B9B9B9C9C9B9D9C9C9D9E9E9E9E9DA19E9BA09D8A787A7F868C9093989C
989B9FA2A3A3A09B9A9A989592918E8B82776F727B82828184888B8A87858584
8C8C8A8885848383837A6F6C7279818A8C8F959899999B9D9897959494939190
8D89857D76747D939C9FA09F9E9F9F9EA09E9C9D9FA09E9D9D9D9D9D9D9D9D9D
9C9C9C9B9B9A9A9A9A9999999999989897979797969596979392
9898989899999A9A999A9A9A9A9999999999999B9B9A9A9A99999999999A9B9B
9A9B9B9B9B9D9D9C9C9C9D9D9D9E9E9D9DA09E9BA0A295827B7C81898E919598
98999C9EA1A2A19E9B9B9B9A9A9A9794908B837E7C7D83898B9096999894908E
91908E8E9090877D7A746F748187898C8C91989D9E9B9A9B959391908F8F8E8D
8A837E787274869C9D9FA09F9E9F9F9FA1A09E9D9E9E9D9C9E9E9E9E9E9E9E9E
9C9B9B9B9B9A9A9A999999999999989897989897969696979898
99999999999999999A9A9A9A9A9A99999B9A9A9B9B9A9A9B99999A9A9A9A9999
9A9B9C9B9C9D9D9D9D9D9E9E9D9D9D9D9D9E9E9C9EA19D937F7B7A81888C8F93
9798999A9C9FA09E9C9C9C9B9B9A97948F8E8C88827D7D7F82878F979A9A9794
91908E8D8F8E84797A7B7D838B8C8C8F8F93999E9D999595918F8D8C8C8C8B8A
857C7775707890A09D9E9F9E9E9FA09FA0A09F9E9D9C9C9D9D9D9D9D9D9C9B9B
9B9B9B9B9A9A9A9A999999999998989898989898979697979392
9A9A9A9A9A9A9A9A9A9B9B9B9B9A9A9A9B9A9A9B9C9B9A9B9A9A9B9B9B9A9999
9A9C9C9B9C9D9D9D9E9E9F9F9E9E9E9E9D9C9E9F9C9DA09E8B80777A80858B90
94969797999B9D9D9E9E9E9D9E9F9E9D9B97939393908C8984868A9095969493
9293928E8C8B8783848889898784868F9393969A9A9693928E8C8A898A898785
7E767374707D989F9D9D9E9E9E9F9F9F9D9E9E9E9D9D9D9E9D9D9D9C9C9B9A9A
9B9B9A9A9A9A9A9A999A9A999898989898989897969697979797
9999999A9A9A9A9A9A9A9A9A9A9A9A999B9A9A9B9B9A9A9B9A9A9A9A9A9A9A99
9A9B9C9B9B9D9D9C9D9D9E9E9D9D9E9E9E9C9FA09B9C9F9E9A8A7C797C7E848B
8D9093949598999A999B9C9C9D9FA0A0989B9D99928E939A9593939595959495
97979693908F8F8F8D8D8C8B8C8A8B929391939697949190898786858584807D
787270736F819D9D9D9D9D9D9E9E9E9E9D9D9D9D9E9D9D9C9C9D9D9D9C9C9B9B
9A9A9A9A9A9A9A9A99999A999897979896979796959595969494
979798989999999999999999999998989A99999A9A99999A9A99999898999A9A
9A9B9B9B9B9C9C9B9B9C9D9D9C9C9D9E9E9CA0A09B9C9E9AA291817C7A797D83
868B909293959697999C9F9F9E9F9E9E99989898969492939897969694919193
95928F8F908E8C8B8B87848A959793939491929696928C8A85848282817F7A76
74706F726E82A09B9E9D9D9D9D9D9D9D9E9D9C9D9E9E9C9A9B9B9C9C9C9C9B9B
9A9A9A9A9A9A9A9A999999989796969795959595949494959493
99999897979899999B99999A9999999A9A9A99999A9A9A9A9A9A999897999A99
9A9C9C9B9B9C9C9B9B9C9D9D9C9C9C9D9D9D9D9D9D9D9D9D9C9E9883787A797D
7E82888D8E8D8F91989B9E9E9E9E9E9D9C9B999795918D8A8D8B8B8A867F7C7E
7B7B7C7F81838586868A90939595949495919093928E8B8B88837F7E7D7A7775
706F737075839F9C9C9C9D9D9D9D9E9F9E9D9D9D9D9C9B9A9D9C9C9C9C9C9D9D
9B9C9B9898999998989898989897969597979695949493939393
99999897989899999A99999A9A99999A9B9A9A9A9A9A9A9A999A9A99999A9A99
9A9B9B9B9B9C9C9B9A9B9C9D9C9C9D9D9C9C9D9D9D9D9E9E9D9E9B8879797777
7C7B7D83898C8D8D94989C9E9FA0A09F9C9B9998969592908988888885828080
82858A8E90909191939494959594929193908E8F8F8D8A8885817D7C7B787573
726E717175879C9B9B9C9C9C9C9C9D9E9E9D9C9C9C9C9C9B9C9C9B9B9B9B9B9C
9B9B9A9898999998989898999998979597979796969595959392
999898989898999A9A99999A9A9999999B9B9A9A9A9A9A99999A9B9B9B9B9B99
9A9B9B9B9B9B9B9B9A9B9C9C9C9D9D9D9B9C9C9C9D9E9E9E9E9C9F8F7B7A7A75
73767A7E8083898F92979B9D9D9E9E9D9B9A9998979696959091908F8F90908E
888E949798989798989593929292929192908E8D8E8E8B86807D7B7B7A76716F
716F7677768C9DA09D9E9E9E9D9D9E9E9F9D9B9B9B9B9C9C9B9B9B9A9A9A9A9A
9B9B9A9898999998989898989898969597979696969696969796
989898989898999A9A999A9B9B9998999C9B9A9A9A9A9A999A9B9B9A9B9B9B9A
9A9B9B9B9B9C9B9B9A9B9C9C9D9D9D9D9C9C9C9D9D9E9E9F9E9AA2947D7E837C
7174787A7B7F878E9095999A9A9B9C9C9A9A9897969594949393918E90949694
8F9295969696969697938F8F9192929290908E8D8E908B837B7A7A7A78736E6C
6F757D7B738D9CA09E9E9E9E9D9D9D9E9E9C9B9B9B9B9B9B9B9B9B9B9A9A9A9A
9A9A999998989898979797979797959496969595959494949493
98989898989899999A999A9B9B9998999C9B9A9A9A9A9A999A9B9A99999B9C9B
9B9B9B9C9C9C9C9C9A9B9B9C9D9D9D9D9D9D9D9D9D9E9E9E9F99A2957D818A85
7C767172787E83868E929798989A9B9C989898989695939291908E8B8D939695
979797969798989599949091939292918D8E8D8D8E8E877F79777574726F6E6E
737A7E7A718C9C9B9C9D9D9C9B9B9B9C9C9B9B9B9C9B9B9A9C9B9B9B9B9A9A9A
9A99999998989898979796969696959496969594949393939392
99999898989898999A99999A9A9999999B9A9A999A9A9A999A9B9A99999B9C9C
9C9B9B9C9D9C9C9C9B9B9B9C9D9D9D9D9D9D9D9C9D9D9E9E9F9AA1947C808B89
837C747071757B818D9297989797979796979898979696959493929193979B9C
9C9C9C9B9C9E9C9898939193949391918D8E8E8E8E8A827B77736F6C6B6C7074
7A7E7C7B778CA19D9C9C9C9C9B9B9B9C9B9B9B9B9C9B9A999B9B9B9B9B9B9A9A
9A99989999989798989796969796959596969595949493939595
99999998989898989A99999A9A99999A9A9A99999A9A99999A9B9B9A9A9B9C9B
9C9B9B9C9D9B9B9D9B9B9B9C9D9D9D9C9C9C9B9C9C9D9E9F9E9BA1947C7E8788
84837F776F6C727A868D949796959493969798989898999A9999999A9B9B9D9F
9FA0A09E9EA09E9A97939294959290918F8E8D8E8B847C76716F6C6B6B6E7378
7D807C7D777A9DA09C9D9D9D9C9C9C9D9B9B9A9A9B9B9A9A9A9A9A9A9A9A9A99
9998989999979798979796969696959496959595949494949291
99999999989898979B99999A9999999A9A999999999A9999999A9B9B9B9C9C9B
9C9A9B9C9C9B9B9C9C9B9B9C9D9D9D9C9B9A9A9B9C9D9E9F9D9BA2947E7E8587
8987837D756F6E707A838E95979796959697979798999B9CA2A1A3A5A4A1A1A4
A2A4A29F9D9F9F9C9B97959695918F8F8F8C8B8B877E75726C6C6C6E6F71767A
7D807D7D6D5F8C999B9C9C9C9B9B9B9C9C9B9999999A9B9B9899999999999999
9998989999979798979695959595949494949494949494949393
9899989697999A9A98989899999998989A9A9A9B9C9C9B9B9A9A9A9A9B9C9B9B
9A9B9C9C9B9B9B9C9A9B9C9E9D9C9C9E9E9A9A9D9E9B9A9D9E97A286627D8485
858686827D78716D6F747F8D959797989995949798999CA0A2A3A4A5A5A4A3A3
A3A4A2A0A09E9C9D9C999798979390918E8D8B877E756E6B6C6C6D6F72767B7E
8182827E6D36528998989C9D999A9D9B9B9A9A9B9C9C9B9A999A9A99999B9A98
9896969697979798979696969696959494949493939494949393
9999999798999A9A999999989898989899989898999A9A999B9B9A9B9B9B9A99
9A9B9B9B9A9A9B9B9B9B9C9D9D9C9C9E999D9E9C99999B9D9CA2895B48798188
87898986827D7773726F727D89919495989797999A9B9B9CA2A1A09FA0A1A3A5
A3A5A3A09F9D9B9D9C9A979694908E8D8D8A857F766F6C6C6E6D6E7075797C7E
7D80807A7A432B4A83989A979E9B949C9D9B999898999999999A9998999A9A98
9A98979898989898969595959595949495959494949394949292
98999998989999999B9A9998979798989998979798999A9A9B9B9A9B9B9B9A9A
9B9B9B9B9A9A9B9B9D9B9B9C9C9C9C9D9D9E9D9A9A9C9D9D9D9361393E7A818A
87898B8986827C7778716D727B858D92949698999A9B9A99A09F9D9C9D9FA3A5
A2A4A29E9C9A989B9D9B979391918F8C8A847D756F6B6C6E70707174787C7E7E
838784788B6C222B4B799B9A949B9E999C9A999898989898999A9998999A9998
9A98979898989798969594949595959596969594939393939191
97989898989898979A9999989898989899999898999A9A999999999A9B9C9B9B
9C9C9C9C9C9C9C9C9E9B9A9B9C9C9C9D9F9C9B9C9D9D9D9E9565413657898289
86898B8B8985807B7C797673737781899196999797999A999B9A999A9B9C9E9E
9EA09D9A989695999B98948F90928F8A847D756F6D6D6F71727375797C7E7F80
848682778C96372C30436F979D96989C9899999A9A9A99989A99999999999998
9998979798979697979695959596969595959494939393939191
98989898989897989898989999999898989898999A9A98979998999A9B9B9B9B
9C9C9C9C9C9C9C9C9E9C9A9B9D9C9C9D999D9E9C9C9E9B95734236387BA08185
878A8D8E8C8985807E7E7D7974717579878E9494939698999695959596979696
979997939391919592908E8C8E8F887F7A746E6D6F71727274777B7D7F808182
8381817C8BB2552C33323A62929B939998999A9B9B9B9A999A9999999A999898
9997969798969696989796959595959494949393939393939292
999898999998989997989899999998989899999B9B9B9997999999999A9A9A99
9B9B9A9B9B9C9B9B9C9B9B9C9C9C9C9D9B9F9C979EA39073493E3A3396B48283
878A8E8F8E8C888582817F7D7B787471747C84888B8F939593918F8E8F90908F
8E8F8D8B8C8C8B8E898988898A867D73716E6C6E72747575787B7F8283838484
8981817D8EC0792E30342E325782989B9A9A9A9A9999999A9A99999999989898
9897969798979696979695949493939293939392929393939292
9A9898999998999B999998989898989899999A9A9B9B9998999898999A9A9998
9A99999A9B9B9B9B9A9A9B9C9C9B9B9D9F9D99989B93704B3A443A3DA9C28D83
86898C8E8F8E8B898784808082817C776F7073797E8286898A88858585868686
8485838284848284838281817F79736F6E6E70737576787B7F7F818588898886
8781817796BE99392E2B31333047749497989999989898999A98989999979797
9796959797969596959494939393929194949392929293939191
999797989898999B9A9A9998979798989998989898999898979797989A9A9A9A
999999999B9C9B9B98999A9C9B9A9A9C9A999C9F92724D3541433452B7C99A84
86898D8F90908F8C89868281838483817B736E6F7275777A7F7D7C7C7D7D7C7A
7D7D7B7B7E7E7B7C7F7C7977726C6C6F6F72767877787C81848282878C8E8A87
83848B79A5BDAF452B3334312E2C436A92949799999898979A98979898979696
9594949596959495949393939493929195949493929292929191
9898989897979798989898989898979799989798999898989597999A999A9B9C
999A9B9B9A9999999A9B9B9A9A9B9B9A999A9C916D45363D42463A67B8CBB889
8B868E9194968D90908D87838283858785817C76716F70717270707272706F70
70706F6F70706F6E6D6F6E6D6F727576797A7B7C7E8082848686898C8F8F8C89
8A878583B3BEB45B2E35312F2F2E302E56779095999A9796999895979B999698
9797969596979795959595949493929292929291939595929392
9999999998989899989898989897979799979798989897989999999898989898
9A989797999B9A99999B9B99979898989A9D8A62423A3C3B42453977BCC9C896
8A8B899094958F9393908B8785858788898785827E7B78777372717171707072
71706E6D6D6D6D6D6E7277787A7C7E7E7D7D7C7E8184858687898B8D8F8F8E8C
8A8B868EC0C0B86231332D2D2E2A2C2D294B6F869496959792989A989692949B
9897959596979898959494949392919192929292939695939493
9999999998989899979797979797979798969697989797979999989899999897
96989A9B9A98979795989A9C9D9D9B9896846140343B424345473888BFC6D8AE
898F8C91929695959594918D8988898A8A8A8B8C8C8B898683807E7C7A78797A
777776757677797A7A7F84868483838382807F81848889898C8D8F9090909091
8C8F87A2CCC0B96836342C2E302A2C2E2C2A32517B93989898989493989A9898
9795959695939293959595949392929292929292949696949494
9899999897979898989797979797979798969697989797979797989999989897
9A99979798999B9C9A9895908C847A7069513B373A3C4045494C3D8EBFC3DBC9
938F979492999C94979795918D8B8A8B8C8B8B8D919494949493908E8B898989
8888878787888A8C8B8C8D8C8987868685848384878A8C8E9192939494949494
918E8ABBCCBEB8693838302F312D2E2F312E2E333D4C6276808D969899969394
9593959999959393949494939393939394939393959695949493
9898989897979898989897979797979798979698989897989898989897979899
999796999C988E85746F65584C423B363838393A3B3E41434A50458BC2C5D4DE
B38D9995979A9E9598989794918D8C8B8E8C8B8C909497979B9C9C9B99999999
989898979594939391908E8C8B89898886868787888B8F929595959799999795
968C96D1C6BDB668363B332F2F2E302D312E2C2D2F302F2B42576E818E929498
9492919496949496929292919292939496949394959594939594
9999999898979899989897979797979798979698999898999999989898999B9C
9798968F827161564D4A42362C2D343A373B3F3F3E3F424448524B85C5C9CEE5
D79B92949C999C989999989794918E8D8C8B8A8C8F9497999FA1A3A2A1A1A1A1
A09F9F9E9D9B9895928F8D8C8C8A888787898A8B8B8E9296989797989B9B9997
9891AFDAC1C0B363363D362F2E2F312D2A2D323330312E26222731445F758693
9998969492919395939292929394959697959494959493939594
989899989797989898989797969797979897969899989899999898999B9A9693
8C837360504643433F3B352E2E333B3F413D3B3E3E3D3F424A524A7DC3C9CFDF
E6BD93959C999C9D9B9A99999895928F8D8C8A8A8D92989BA2A6A8A7A6A6A7A6
A2A1A0A0A09E9A96928F8D8C8B8988898A8B8C8E8F9296989A99999A9B9C9C9B
959BCCD3C0C1AC583C3F36303030312E322F2F2C282C312F282825262D3A526A
818B949694949696939392929394969797949395959493939493
9797989796969797989797969696979798969698999898999997989A9B94887F
6857433D4146433D3B352F31393F3E383C4144403D4044464F534777BFC6D2D7
E2DE9C9798999E9F9D9C9A9A9A98949193908C898A8F959AA2A5A8A8A9ABACAC
A6A4A1A09F9C9793908D8B8A89898C908C8D8E909396989A9C9C9C9B9B9C9E9F
91A3E1C8C0C0A44D413F3330312E2F2E2E292C2E2A2A2D2A2E2A26292C2A2B33
4B637D8B8F929393929190909192939496949394959493949291
98989898989898989696989A9A98989997979596989796999A9999968971584A
404547433E3C3B393233363B4043434243443D3D3E3C43484D4B4B6EB4C8CDD6
DCE5C5919E9DA09BA2A09A9AA19E96949392908D8C8D90929DA6ADAEAEAEACA8
A8A8A7A59F9993918A8A8B8D8E8E8E8E8B8E919294989C9DA29A9C9D9BA0A39A
91D4D5C6C2B89448433A33302D2E302F2E2C2C2E2F2E2C2C302E2B282B2F2D28
2B303E5674868F94928F8E909191929695959697969594949494
98989898979797979B9A99999795979A99999795959898959689756252463F3C
4143423D3A3A383538393B3D404142423E413C3E403F4448474E4D5AA6C9CCD2
DEDFE3A694A49BA6A1A29E9B9D9C99979392908D8C8C8F9199A3ADAFAEADACA9
A9A9A8A49D9692908E8E8E8F9090908F95969696989C9E9E9AA19FA1A799A286
B7D7CCC6BEBC8A42423B3735302F2F2D2E2D2E2F2F2E2D2E2E2D2B292B2D2D2C
2E2D2B303E53718B919292919192939294939394969694919494
9797979797969696989594979A9996939C97969596999282695E4D3F3A3D4144
41413F3D3C3B38343C3E4041424242433A3F3C3F434146494951514B95C9C9D0
D7DFECCB8CA6A19EA0A2A4A09C9D9E9A979693908E8D8E8F939EA9AEADACABAA
AAAAA7A19892908F8C8D8E8F909293939999999A9C9E9E9C9FA29EA99AA59194
D9D6C4C8BAB9783E413C3A38333131302C2D2E2F2D2C2D2F2E2D2C2C2B2C2E31
30302D28262B4058768390929091929396969693919092949191
9898989797969696979697999A9A979597959C9D90826C524242414042444442
3F3D3E413F3A37383E3F4143444444443D423E404343484B5050524C81C4C6CF
D3DEDFE9A590AB9FA1A0A4A6A09FA09B9C9B989593908E8D8E97A3AAACABAAA9
ABABA69D948F8E8E8D8E90909193959596989A9D9FA19F9CA1A5A59BA69386CB
DDD0C5C6BBAC6342443F3D39333132332F2F2F2E2C2C2E30312E2D2E2D2C2E32
3336383A362B272C3E526C818C9191918E909395959493939595
9898989898979797979999969393979B99908C816550453A3B3D404142413E3A
3E3B3D423E36374042403E3E40434444434741414343494C504E53526BB9C9CC
D5D8DBEED98B9BACA7A0A3A7A3A09F9C9D9C9A999794908D8D929BA5ABACAAA8
ACABA59B918E8E8F9193949494969797999B9EA0A2A4A4A2A49EA5A29485B5E5
D4CCC9BFC09A5449443F3D39333030303432302E2D2F313234302E2F2F2D2C2E
373534383C3731312E2D35496072808994908E8F9395938F8F8F
9898989898989797969594969A9B979287715D4F403C41433F3D3D3E40404041
413C3B3D3A363C4648433D3B3C3F4243454943414243494C4C4F535459A8CCC9
CFD8DBE4F2C2879BAAA5A5A7A6A4A3A29C9B9999989693908E8F95A0AAACAAA8
ACABA499908F909190939696979A9C9B9EA0A0A0A2A5A7A7A99EA29580B7E8D8
CFCBC9BAC2864B4C3F3A39393533322F3533312E2D2F31313633313132302D2B
34353333383A3B3F3F332B2B303A4C5E767E888F929292929494
9797979797979797999695979992806F564A403E41424240423E3C3E3E3C3D40
3E3C3734363D44474B48423F3E3F4041424742414343484A4A504F4F528CC7C9
CAD8D8DDEBF2AC919FA6A8A6A7A8A7A7A09D9B99999996938E8C909BA6AAA9A8
AAA8A1968F8F9192909599999A9D9F9EA0A1A0A1A3A6A7A6A4A69A80BBE6E3D5
CECAC7BCBA6F444A3D37363837373632343534312F303030363636363635312C
2B353A3838393A3C3E3F403C332A2A2F3649637A878D90919292
9696969697979797989A978C79644F423D41413C3A39393B3B3533373834353B
3637322C334348434A4A49464441403F3C434041444448484A4D47495272BBCA
D0CED7DDE6EBF2AA8DA1A8A3A6A9A8A6A6A29E9B9B9A98968D8A8D98A2A6A7A8
A8A69E938D8F9191989DA09E9D9E9E9C9F9FA0A3A7A9A7A3A19A80BAEEEAD5D8
CCC7C5C2B25D3E47443C37373737363235383A3733323233373A3B3A3A39352F
25333B3938393A3C3E3D3D3F41403A342F2C2F415D7685899293
96999A97959799999B886F59483D3B3E3F3B39393937393D3839383534353431
2E302D3544474347474745413E3D3D3C3F3E40413F4349494D43454F4D57A0CE
CDD4D7D6E3E9F3EAA98CA0ABA4B1A9A6ABA7A29F9E9D9E9E968D888F9CA4A5A3
A09F99908F9598969E9D9D9FA0A1A09F9D9DA6A7A9A9A3A78F8EC4EDE8E1D9CF
CFC9C3BFA3564440434137393834383539393A3B3A38383A3B3D3F3735393634
2F272E3A383639373B39393E414041434238342C2F3C4C65737C
989593959894887D6557463B373635343A39393939393B3D383A393736363533
312C33404440404345474845413F3E3E4242444341464B4C48444A4E4F5583C4
CDD0D6D5DEE4EFEDE39599A8ACAAA8B3A6AAABA7A09C9EA29C968D8B919CA2A2
9E9B958F8F959A9C9D9E9FA0A09F9E9EA4A2A1AEA8A2A89090C2EAEDE4DBD0D3
CCCBC2C0884C46403D3F383735333A3A3A3A3B3C3833333735383B35353C3936
34292B3537373B3B3F3D3C3E3E3D3C3D3B393D3C36312D2F454B
9596989689725949423C353235383835353739393A3C3D3D3B3B3B3A39383533
2F2E3E4C4744484642464844403E3E3F4344464341464A4943454D4B505265B5
CECDD7D8DCE0E9EEF0E09295AFAAA6AEA8AAACAAA6A2A09F9F9E968C8B939A9A
9794919092979CA09FA0A2A1A0A0A1A2ABA3ABA9A9A3939FC2E6EAE3E8DCCED2
CCCDC1BB6B494B423B403D3A343137383232363B3935363C35373B36363B3735
362E2A2F363A3C3E3D3D3D3C3C3D3D3C3F3D3D3F3A373933282C
9A91826E57423837383A3A363538393835383A39393D3E3D3E3D3C3C3B373330
2D39484C474B4D46454645413E3E4041444546444246474243484C494E51579F
CECDD7DADBDEE1E9EEF0D09795A4B6A2ABABAAAAA9A7A39E9FA19E958F8F9090
908F9195999A9C9FA1A2A2A1A2A3A6A8A8AFA7AAA793A1C7E6EBE5E5DED1D4D6
CECDC1A85A4E4A433C3E3F3E393232343533363B393332373936393939383333
32312C2A323B3C3B3A3C3D3B3B3E3F3E3F3E3D413B3A42373B3D
7D69503F3735383C373A3B3736383A3A393B3B38393D3E3D403D3B3B39342F2C
35454B46474844424A494642414243434948494947484640464D4A4B4C4F567E
C8D0D6D8DADCDDE3E9EEF1D49299ABABA9ADAFADA8A7A7A7A3A2A29E98928E8E
8F8F939A9D9C9DA0A0A0A0A2A5A8A9A9AAACA7A298A2C9E3E7E9E8E5D6D1D9CE
CCCBC18B514F41433E393A3F3F383437363234393A353336393235383A373236
2E3530262A373C393C3E3E3B3A3D3E3D3D3E3E423A3840353A3D
443D36363A3C3B383E3C3A393B3D3E3E3E3D3B393B3D3E3D3F3C3A39342F2E31
434C4B494D4741484A494644434444434B494B4D4A474541474E4C4E4C4C545F
B4D2D6D8DADEDFE3E4F0F1ECD99C96A3AAADAFADABACACAAAAA6A4A29E989697
9595989C9F9EA0A2A1A2A4A8ABACAAA8A9A8A993A0CEE1ECE9E9E0DBDBD9D4CB
CACABD704D493B434238393D3F3C363934313236393938393831333538383336
343A362926343D3C3C3E3E3C3B3C3E3F3F3D3E403B3C4341393C
30333637373839383D3A383939393A3C413D3A3B3E3F3F3E3D3C3B38302C343F
4C4D4E50504C4A4C494845414042444549474B4E48424345444B504D4E4B4F53
93CFD7DADDDFE2E3E7E3EDF6EDD6A39BA5A9ABACADAFADA9ABAAA7A4A2A19F9D
9C9D9E9FA0A1A3A5A6A8AAACADACAAA8A3AC9AA6C8E0F0E9E9E5DFDAD8D3CFD6
CCCAAC5E4C464041433D3E3B3C3E36373A3837363636353438363631343B3734
3A393830282F3B3D3B3C3C3C3B3B3E423D3B3F403E3B383B3D3C
34393B383636353337383A3A3633363D423C393D41413F3F3C3D3D382E2C3A4C
4C4D52514A4E50474948443F3D40464947454B4E463E42494046514A504C4D56
74C7D6DBDEDEE1DFE0EBE7ECF3EDDCAA99A5AFAEA9A8AAACA6AAABA7A6A7A39D
A0A2A3A2A3A4A5A6ABACACABA9A7A8A8AC90A1C9E0EAECEDE8DDDFD9D4D9D4D0
CEC699524A46483C3E3F443C3A3F38353637363435383A393539392E32403D35
3A343635292A35393D3C3C3D3B393C423E383937393A37423D3A
3738383737373A3C3838393A3B3A3B3D3F3E3D3D3C3C3C3D3D393831272E4553
524D4A4C4F504F4E4D43434744464B4B48494F4C43464940494746474E4D4C5C
6BAFDFDBDBE2DFE1E3E4E6EAF0F2EADFB89F9FAEAFAEADAAA6ACAFACA8A8A9A8
A6A7A8A8A7A8A9ABADA9ADAAA7A9A6A586A6CAE0EAEEECE7E2DEDCDAD5D4D5D3
CBC28548444C434143413F3B373E3F3531333738393C3B3439383B3D3C393A3E
3436373732292A34373C373E3D3C3741443F3E403D3A3B3B3B3B
3536373738393B3C3C3B3C3D3C3B3C3E3C3D3F40403E3C3A3B39342C2B38474C
4C4D4E4F4C4A4B4E4F4A464342464949494F4F4743444749454145484B52555B
5E98D7DBDFE1E1E1E3E5E6E8EDF1F0EBE0C59C9BACAAABB0B0A7A3A8ACAAA8A9
AAA9A8A8AAACAEAFAAA6ADABA8AEA593AAC3DDEAEDEDE9E3E0DCDAD9D6D6D6D3
D1B7714E44434047444241403D3D3C3935353737383C3C363839393737373737
34353536342D2C323A3E393D3C3C373E413E3F3F3B3A3B3B3E3E
36353637393A3B3B3D3C3D3E3E3D3D3F3A3C3F41403E3A383638312931414848
484B4F4F4B48484B4C4D4843454A4B4A4C534A404547474E443D454847525754
5880CDDDE1DFE2E1E2E6E8E8EAEFF3F3F3DFCFA993A4AEB0ACB0B0ABA6A7A9AB
AAA8A7A8AAADADADB0A9ABAEAA9A92A3CCDCEBEFECEAE6E1DEDAD9D8D6D6D6D1
D1A85E52463F414645434243423B393E3835343434393A363637363232363532
3637363535302C2E393D3B3C3B3C393D3D3D3F3E393A3C3B3E3E
3B3938383B3D3D3C3B3B3C3E3E3E3E403B3C3D3D3D3B393833362F2B38454849
49494A4C4C4C4A49484D49454B4D4A4B504D423D454B494A453F464849505252
586FBCDEDFDEE0E3E2E6E9E9EAEDF0F1EBF7E4D3B7939AADB3ADABAEAFACACB1
AAAAAAACAEAFAFAEADACAAA49E95A5D1DFE8EEEDE9E6E3E0DDDAD9D8D5D5D5D1
CA955A514946443E44434041433C394038343331303337363335343333363533
383A383636332D2B32383B3C3B3D3D3E424345423F4244404141
3F3C39393C3F403F3A3A3C3E3E3D3E3F3B3B3B3B3A39383736322B30424A4849
4A49484A4C4E4C4A4A4C48484D4B474A4E44404143494C46464547484E4E4C57
5863A4DBDDE2DFE4E3E5E8E9EAECEDEEF3EFF1E6DBBD969BA9AFB0AAA9AEAEAA
A7A8AAABADADAEAEADA8A59593B6D7E0ECEEEFEBE7E3E0DEDCDBDBD9D4D4D4D1
BE7D5B4D4D4A433A3F423F3F44423C3D393635332F3035373434353838363537
363A3937383632302C323A3C3C3C3F3F3C3C3D3C3A3E3E39393A
3C3936373A3E3E3E3B3B3D3F3E3D3C3D3A3B3C3C3B3936353A2F2A374A4F4946
484A4C4B4A4B4D4E4C4B48494C4C4B4E463F434741454C484A4947464D494657
5C608ED2DDE4DEE2E4E5E6E7EAECEEEFF1F5F1F2E8DCCCA2929FA9A8A6A9AAA9
A7A8A9AAABACAEAEA7A28D92C3DCDBEDF0EFEDE9E6E3DFDDDADADCD9D5D4D3CD
AB66564B4D46403D3D4040414747403A39363636313033343635383C3B363538
323637373A3A37382B2D383B3D3C403E434141424143433F4040
38363536393B3B3A3A3A3C3E3E3C3B3C3A3A3B3B3A373433362D30414D4E4A45
494C4E4C49494B4D4B494949494D504D4242454745464B4E4E48464445474851
5D5C78BEDCE1DFE0E3E4E5E8EAEDEEEFEEF2F4F1F6EED8D9AF978FA0ACA6A5AF
A8A9AAACADABA9A69D849ECADBE8F3F2EEEBE8E7E5E3DFDDDAD9DAD8D4D2CCC2
905A504D494041413F3E40434648443B3B37383A373332313737383A3A383636
333535383C3B383A2F2A33393E3C413C423E3F414040403E4040
3A3837393B3B3A3837383A3D3D3C3B3C3A3A3938373533322F2E3A494B494947
4B4D4D4B4A4A494848494B48454C4D43424643434B4A49524E434543404B5151
575365A9D7DCE2E1E1E3E6EAECECECEDEDEEF3F3EEF3F3DFDFCDAB8D8B9CA5A0
9E9EA1A4A4A0979083ABD7E4E6EBEDF2EFEBE7E6E5E2DEDBDAD8D8D6D3CFC4B6
78574D51453F4541433D3E424245453F3E393A3F3D38343136383735373A3834
383735383C3A3637322830363F3D423C413D3F423F3D3E3F3F3F
3737373A3D3F3E3D3C3A3A3D3F3D3B3B3B393A3A373737332B303D4646484A44
44484C4E4E4C4945474A4844464B4840454445484D504E4A45434142484E4F4C
4859628ACDDCDEE0E3E4E5E6E8EAEDEFEDF3F1F3F4F4F6F2EBDDDDBE979EAFB2
B9C4CBCED2CAA983B3E2E2E8F1F2EFF0EBEAE7E4E3E1DED9DAD7D3D6CCCBC69A
665A4D45414346454042424246454243423E3D3D3C3D382F313437393938393B
3E393637393936343831292F3D3E3B403C3C43463E3B3D3B403E
3A3A3A3C3F41403F3C3F3E3A3A3E3C36393737363536352F2B36444947484946
4E4B484748494B4C4B4B4A494746444345484A4A4E53504942434446484A4844
4E545774B1DCDFE1E2E3E4E6E7E9ECEDEFEEECF3F5F5F3F5F2E8D7D1E8DDDDE7
E7E7E2DDDFE2DCD2D6BCDCEBEFF1F0ECE8E8E6E3E1DFDBD8D6D7D4D3CDCCBB89
60574F49424143434344434447453F3D43403C37363B3B323232333636353739
3A3634353737373836322D303A3E3B383D3B40413B3B3F3F403F
3C3C3D3F414141403F42413E3F43413C373736353739362F2E3F4B4B49484849
4E4A494A4C4A49494D4A4A4B464042494B50504B4C514D434144474848474542
4C525B6C94D1DCE0E1E3E4E6E7E8EAEBEEEEEDF3F3F8F0F6F5EAA598BFE4E4E3
DCDBDBDAD7D0C8C29E7FAEF3F4F2EBE9E7E7E6E3E0DEDAD7D3D5D4CECDCCAA76
5B514B4A45414140484744444846403D4344443E3D43433A3A36343636353538
3837363636373A3D3935302C303B3F3B3E3C3F413D3E43453E3E
3B3B3D3F404040404341414445424142383938373C3D383236474D4A4A4B4A4C
49494C51514B47464B474646433F454E5153504A494B48424344444547484949
4C535F6983BBD8DCE0E2E4E5E6E7E8EAEAF1F3F3EEF7F1F5F6C48993A4C7D0D0
CDC9C7C8C6BCAFA6A99B86C4F1F0EEE9E6E6E6E3E0DCD9D7D3D3D1CACBC59C6E
594C44454543423F49484442454542423E3F42403E42423D403A36383837383A
3939393937373A3E3B37332D2B3641403F3F4142414143454242
3A3A3C3F403F3E4042404042413D3B3B3A3C393A3F3D3634414B4B474B4F4E50
4C4B4C4D4B48494D4A47434142464C51514F4C494847484845423F41464A4C4D
5252565F79A4D3D8DEE0E3E4E4E5E7E9E9EEF3F4EBF2F4F7D89CA1AFB7B1BFB9
BBB8B5B5B8B9B5B0A7A98D8CE5F1ECE4E4E3E3E1DDD9D6D5D3D0CECBCABA906D
574B43424142454545454240424241444440403F3B3B3E3F3F3B38393A3A3B3C
38393B3B3837383B393638362F313B3F40414041424140424343
3B3B3D40403E3E403D41413D3C3E3C373C3D39393D3731354A4C49484C515252
4E4F4D4A47474C514A484442474F5250504D4B4A4845464947423F43494D4E4D
4C4F535C728EC5D8DCDEE0E2E2E3E6E8EDEAEEF4EFEFF9F0B2A9C0B8B8BDC2BA
B9BEC2C2C4C6C5C2C1B9B987BAF3E5EBE4E2E0DFDCD8D5D4D1CECDD0C8AD8769
544C47433E40474B41444342434241434B464749433C3C3D3E3F3E3D3B3B3A39
393A3C3D3C3A3A3B3C3838372F2C343E3E3F3D3F444443464242
3D3D3F42403D3D3F3D41413C3C3F3E3A3D3D38393C34313D4C494A4B4C4F5251
4D504F4B484A4C4D484645474F54524D4B4D4E4C49464545484341454B4D4D4C
464D545D6B82AED3D9DBDEDFDFE1E5E8EDE9EBEFF0EFF8CD93ABB2B7B4BEB8C0
BEC1C2C1BFC0C1C2C6B7BEA5A0EAEAE3E4E1DEDDDBD7D4D3D0CFCBD0C19F8062
514C48423F42474641434243464544454544494D473F3A363B4244403C3C3A37
3D3C3D3E3E3C3B3B3E3B37342F2B303C3A3D3C40474643454444
3E3E4042403C3C3E423F3D3D3B38383B3F3D383A3E3536474A464B4F4B4B4F4F
4F525049474B4D4B4341434B5456504A434A4E4C4A49474347434144494B4B4B
4E4D4D5462819CC9D7D9DCDDDEE0E4E7E8E9EAE7EDF0F2A58EACABA9B0ADADAC
B2B1B1B2B4B3B3B4BEBEC3C099BBF4E0E3DFDBDAD9D5D2D1D2D1CACEBA977E5D
514A44404247453D41413F3F444646484345494A4644423D333E44403C3E3D38
3E3C3C3D3D3B3938383B383636302F363A3E3E4147433A3B3E40
3C3F41403F3E3D3D393E3D3C3F3B393E3B3C3C3D3B373A4447484645494C4F53
53524D484A50504A3F474F52514E4843464A52555048464A404448494A4B4B4A
4A4A46545E8187BCDBD6DDE0DBDCE1E6EAE4EAE5EEF5D190A3A3A19EA0A5A8A6
A9A7A8AAA399A2B8BBBEC3BFAB9DE7E3DFDBDBDBD6D3D3D3D1CFCDCDB0917C54
4A46484A4541403F3C4044444343444449454242454644413A3C40403D3A3D41
3E3E3F3F3D39383A373B3C373C3326393B3E3D3F45423D3F3F3F
4041403E3C3D3F403D413F3D3E3B3B4243413E3E403B383B404547484A4B4C50
4E4E4D4E51524B4345474A4C4B48484A4E4B4B4F4F4B464445464747494B4B4A
47504F545B7F87A3D5D8DBDEDCDCE1E3E6E4E7E6EAEEBB8EA4A9AAA5A09FA1A1
A2A3A5A8A8A6ACB7BBBBB7B6B29ED9E6DEDADAD9D4D3D3D2D1CFCCC6A78F7653
4E464447464543403C3D3E414647443F4646464543424243413E3C3E403F3D3C
3A3B3D403F3B37343B3C3B363A352C3A40454340444440414242
4646443F3C3D3F3F3E403F3E3E3B3C4140413E3D3E3B35332E3437393F454D57
514C4A4D525048414C48484B49464951534D494C4F4E49464A4948484A4B4B49
4950515155768E96CADAD9DBDDDBE0E0E3E5E5E7EDEAA798A6ACAEA9A19E9FA0
9FA3A6A9AEB2B4B3B5B6ADAFB59AC5EBDCD9D8D6D3D3D4D2D2D2CEBFA08F6C4F
51494647444242403E3D3D3F45484540444444444242434447413D3E42423F3C
3F3D3B3B3E41413F3A3939363A3C3B423A41413E424645434747
4343423F3C3C3B3B3D3E3E40403E3C3E383E3E3B3C3B38373436333132363D45
47474B4E4C4644474C4A4A4C4C4A4B4E4F4C4B4C4D4D4D4D4B4B4B4C4C4C4A48
4C494F53556A9196BDDBDADBDFDAE0E0E2E3E4E5F1DC96A1A3A6A8A6A3A3A4A3
A5A7AAACAFB4B4AEABAFACABAC90B2EEDCD8D6D4D2D4D6D2D2D3CFBA9D8E624C
4C494A48413E4143414242403F41444545424041454747454746434241414040
3E40414142423D3833333636373C40413F434445494C4A464545
41424241414242423D3C3D40403F3E3D393F3E3C3E3F3D3C3D3E3C3837322E2F
3138444B463E414A4A4A4B4C4D4D4B484948494A4B4B4C4D4A4B4B4C4B49494A
4C47525959608D94B0D8DCDDE0DBE0E1E2E0E4E2F2BD8196989CA0A2A4A6A7A7
ABA9ACAFADAEAFABA6A6A7A19A89A3E9DFD8D5D4D3D5D7D5D2D3CDB29B895B4D
4645484742414446444645413D3E4144464441424648494847474643403E3E3E
4142413C3834312F373A3D3E3B3D413E433E3E4244423F3C4241
45444340404244453D3A3C3E3C3D3F3F3F3F3B393F403C38393B3A3A3C3A3534
302C303A434546494B4C4C4C4D4F4C474948484A4C4C4A484A4949484646484B
4C495354555C8A99A6D0DEDFE2DEE0E2E1DEE4E6EE9C73888A919BA1A3A5A7A9
AAA5AAAEAAA8AAA6A69B99908C8794DCE2D8D4D5D5D6D8D7D5D3C8AA9B815852
4A4545464546464245454441404141404345454443434648474643403F3E3A37
3D3B38333030353B3E4244464240444149403F45464648484444
45433F3B3A3C3D3E3C3B3F413B3B4041413F3A393D3D39373F3F3B393C3C3B3C
3C322D35424A4C4B4D4D4D4D4D4C4B4A4C4C4C4D4E4D4A484A4846464646484A
4D4A504E525984A0A0C7DDE0E3E3E0E1E1DEE3EBE27E6C7E7D838D979EA3A6A7
A5A0A6AAA6A5A49C9F928B82878681CEE6D9D3D7D7D6D7D9D6D1C3A49D755151
4D4845454445433E4544424142444442414346464442434545454341413F3B36
2C2E353C3D3A3C423C403E43433F4342423B3D4141454B4B4646
494744403F4041413C3E47483F3C42444041403E3F3C3A3E4444403E41414042
3C3F434544444B524C4B4C4F4C46474B4B4E51504D4B4A4A4A48464849484748
4D484F515757789E9DC0DCE0E3E6DFDFE3E0DEEBD368647573757B8897A1A3A2
A19DA3A7A3A4A091958C847C888472C6E9D9D2D8D9D6D7DBD4CEBFA09C6A4748
4947474541414240434444414043484A43434447494945424245474542413E3C
2D2D343D3F3B3D4342453E4347424646434144443F4348454142
444746414145443E434047463F4141413E3F3F40403F3D3B404545403E403E3A
3F454A4A4745484C4B4D4E4C4B4A4B4B4A494A4E514F4C4A4A4D4C4B4C47444A
454A4B4D5259699EA2AED9E2DFE7E2E2E0DEE5EFAB5767686A6F7A818C9A9FA4
A2A3A59FA6A797938D7D747B7C7F76ABE9D5D6DAD6D8DAD7D7CAB79F94614B47
42434443413F4144444443403F43464747454443454646454543424446474645
3D3432343841453F444144474544484B484543434445484A4242
4548484444464440423E44433F42424244413F404344403C423F414440393B43
484A4C4B4847494B52494952524A4951514E4C4B4B4C4C4C4B4A4E4F4A4A4B47
494C4F4F50566296A4ABD3E1DFE6E2E1DEE1E6E294505B6662647D847D8FA1A1
9F9D9EA0A5A2948D77716976767D7B79DADED6DDD6DBD8D6D5C5B0A08D5B4D4E
4C464447453F4046464441404144444241434443414143464643414344434344
43393637373D474B4545494B494B4C4946444344444443444342
4647474645454544464145434246464645434242434342404241403F3E3F4348
4C4C4C4B49474848524D4B4F524F4D4E4E504F4C4B4C4B494C474F52494C4F45
4849525150545788A8A9CAE1E0E5E2E1E5E5E9DE9A6A5B5C5E616F797F8894A4
A39F9EA6A69C90816A65697576837D57C1E7D5DFD7DED7D6D6C3A9A180504C4F
4D48464644414245454443434445434140434647454446474642404242414144
4741403F39373E4542464A464245484542414143454545454342
47464544434244474741424040444344444547464240434846423C3C41494C4C
4B4B4C4B494747474E504E4B4E524F49494D4F4C4B4C4C4A4B474E524B4A4C46
424351525054507AAAA8C2E1E2E5E3E2E5E2E8D5A989655853606666788B929C
A4A3A1A9A4978B73665E6B6E7B89745DA9E7D9DEDADDD9D7D6C1A49D714A4B4B
454947403F44444042454748464544443E3F4143464542404440404343414245
424447463E3734353D434B4B44454949454342434647494A4544
464544454442434649454441434744464748484742404348483D3A454B494C53
4C4C4C4A4747484A4D4B4B4E4F4E4D4D4A4D4C48474A4E4F494A4C4F4F484549
42434E504E524E6DA7AABBDFE4E5E3E3E4E3E8C7AD977C7368585B64697A8D9B
9DA3A3A7A094856764696A6F8F957C7AA1E1E0DCDDDADAD8D2BDA095664C4E49
424849413E41423E4546484948464544403F3F414242413F4342434545434345
3F46484542413B363438424B4A48484749464445474849494948
45464748484645454A474643474A464A4C47434342403F404040454A4C4A4D52
4E4D4A464445484B474B4D4C4D50504E4A4C4D4C4A4A4B4D494C4A4C4F48434A
484A4C4C4B514E629DACB6DBE4E5E4E5E7E7E0C0B5A597939B7E675C5F6A7D98
9BA6AAA79F937D6161796B83ACA69493AAD7E6DDDFD9DAD8D0B89F8A5D4E4D46
48484847423D3D3F494644464847433F434443413E3E42454345464645454444
474C473F434947433B34363D4041414046444446484847474847
484949484949484746454440454741454C45404142403D3C3E484D49484D4F4D
4E4B484646474949464C4E4B4C51514C4A4C4F52504B48494C4B4B4A4B4C4B47
494E484A4B5151578FABB1D5E3E5E3E6E4E5CEBDBDB2A8A5B2BFA06557677488
99A5AEA79F907460617677A4BEB2A3A1B9CAE5E0DDDDD9D9CDB19C80574C4946
49474647433F3F4248454444444241403E40403E3B3B3D404146474443454644
4A4E48404347474747413D3A393C424343414042454646464544
4D4C4946474A4C4A4B4B4945494942474A454344434040424A49494A4B4B4D50
4C4A494A4C4D4B494F474851524A494F504D4E514F4A494D4E4A4C4A46515343
444D444A4D53545185AAAED1E1E5E2E7E3EAC8C1C1BAB6B9B5CCCF9D62516685
909CA8A39C8C6C606D6F8EC6CABDA9AFC3C0E1E1DAE1D9DAC6A79778544B484B
444544414144454343454745403C40463F3F404142413E3C3E45464140464845
434948444644404241454841383A424547423E3E404242434444
4449474A4D4A4A4849494C4D4B4846414B43403F3C453E464D4D4D4C4A494D52
4B48474A4C4D4D4E4845485053504C4C51504C48484D4E4C4E4747494F514A48
4A44474E515552466BAEA5C5E2E6E2E6EBD9C1BFC2C2C7BFC1C3CAC274546278
8F979DA197846560707DB4CBC9C7B9B6C7BDCDEADDD9DDD7C59F93664C4E4A4B
433F42474243484A44444544423F3E3F434346404248444A413F434A49424248
4847444345434143473E454C41363B40454240434643444B4A46
434845494D4C4E4D4949484748474646484A41393F464842494A4C4C4947484B
4C4A484A4F524D4649484A4E4E4B4A4C4B4A4948494A4A4A4F484A4D4F4E4749
48414954514A4B4E5FA1A7BDDFE5E3E6E5D2C0C0C3C6CAC7C7C5C4C57F4E5674
92999C9D93846A696F97C3CECAC8BABDCBC7C2E0E4DCD9DAC09F905F4D4D4642
464342434446454147474745434343434345484441434448483F3B434A494645
4B47454849423F464846424144423A34424645444647474A4D4B
444946494C494A494548464549474446474D403644444D434445484A4948484A
4B4F4F4B4A4D4C484B4B4A4A4B4B4B4B4748494B4B4A4A4B4D494C4D4B484448
45474D504B494D4E528FACB5DCE5E6E8DFC9BEC1C9CFCDCCC7C9C4C585505672
8C959A9A8E7C615F88BACAC9CAD0C1C5CFCEBCCDECDED6D7B9A18C57504F463E
45474441464A4743474847444344454445464545424145434542414244444648
43444447474240454A52493F444640403D46474345494A494B4B
454946494B464443494D47454B4A454A4C4C403B45444A4B464647484A4A4B4B
50524F4844484C4E4D4B48464A4E4C48464A4D4B4B4D4E4D4B4A4E4A47484548
4A4B4B494A4F514E497CAFAFD6E4E9E9D8C0BCC4D0D8CDC9C4CAC8C6844C5368
838D94978E7F6562A0CAC5C4C7D1C7CAD3CFC3BAE6E0D9CFB1A1844F51504A42
454B48444849484C4548474342454543464641464442484140464A463F3D4248
3F494B4646494744444A47414142424639444642444848474747
464945494C48484851534A464C4C494F4F4C4640404846524C4A49494C4C4A48
554E47464A4C4B4A4C4C4A47494C4B47474D4E48474D504E4C4D4E46464C4A49
5047454C524E4D53476BACACCFE2EAE5CABBC0CAD4D8CBC6C1C5C9C3845A6B7C
8A8F8E8D857A6362ABC9C1C7C3C9CAD0D8D3CEB7CDE3DDCAAB9E78494F4D4B48
4A4C49494B464348454747454445444143464145444046424346484644434240
3F49494445484542464242444549463A3D434644454545474647
4A4B46494D4A4C4F4E504C4B4F4D48494C4B4A423747444D4B4A4A4B4D4E4C48
4D4A494E504D48464C50524E4A494B4B4A4F4E48474C4F4E4C4C4C44454D4B48
4A4A4A4D514E4D534C5CA3AFC9E4E9DBBDBDC9D2D4D3CCC8C3CDC7A17476929A
ACAEA9A3988B716EB8C8C1C7C4CACFD5DBD9D3C2B4DFDFCAA8996B4A4E4A494D
4B47454A4D484140434445464544413F3C434344433D3E424445464648484540
40414042464644474C464542404A493543464647474443474849
4A4B45494C484A4C49494A4C4E4C47444B474945393D4445474A4B4B4C4D4E4D
454A50524F4B49474E50514E4B494A4C4D4C4C4B4A4A4D4F4E4A4A46474B4747
444E4E494B4D4D51514F92B1C3E6E6CCBDC6D0D8D6D3D2CAC8D2B87C6883989E
AFB6B8B6AD9F847FA9C1C4C3C8CDCFD5D9DAD6CFB1CDDFC7A6915D4C4F48464D
484444484A4A453F43424346464340403C4142424C483C424445454545464747
474340444B4B4A4E4546453F3C3E3D3844464545464544474648
424442484B4647484D48464646494B494E44464C423445434A4D4D4A47494E51
484D4E4C4D4F4C464E4A47484B4B49474D48484D4D48484E51494A4B4B494448
4B4A47484B464855524383AFBDE4E0BEC6CFD3DADBD7D8CAC4C1A4787E8F92A9
B2BBBFBFB5A78C877EB1C9C5CBCBC9D3D6D7D8D4BDBADEC1A188524D4F46424B
4847494844484A434542434849444244434340445A5A42434844404042454748
4847403E44494745404445494B3E343C40434241444646474447
4F4F4E514D494D4A4E4B48494E514E494A4F4A47493E38444C494C4E48494E4D
524B474A4B49484B46474B4E4E4B4A4B445057514A4A4C4D4C514C4648484649
4746474949494C514D4B63AEB4E3D7CCCACDD5DADFD8D9C3C1B08F8691939CAD
BBBBBABFBBAF9E88896FADCDC7D0CAD3D9D0DADCC9AECBC39F75434C48464B44
4743454D4F4742434448474344484946433F415062604E414042414149443B47
454341403F3F40424442424A4B3A354447464443434343434547
49494A504F4D504C4D4B48484B4D4C49464A46464840393D47484C4B48494E51
534D484849494B4E4144494E504D4B4A4C4D4D4D4C4C4D4E4C4E4C484949494A
4646474748494C4F5347549FB9D4D6DBCDCFD5D9DDDAD8BCB2A7918F9695A1B3
BCBCBABDBBB3A58F817675A1C9CACCD4D9D8DCDBCFB2C0C69D67444C4B4A4E49
444A4A45464C49413F4449494A4A484447484345525F5F5A4142433C3D444446
4241414242403E3D474344463E353942464647474848494A4446
4A48474C4C4A4D4949484645464848464647464849453C37414A4D4B4A4B4F54
4E4D4B4848494B4C49474647494A4C4E504B494D4F4D4D514E4C4C4C49484A4A
45464747494D5051514B4C87BDC7D6DCD1D0D7D9DBDCD4B1A29C94969695A7B9
BFC0BCBCBAB6AB9682756574AFD6D0DAD9E1DEDAD4B9B2C8A057474D4B4B4B49
4A4A4845464949464344464746464646454A464147535D635C4843423E414447
4140404344423E3C413E44433739444546484A4A4A4A4B4C4446
4D4C494C49474B484F4E4C4B4C4F4F4D4A484A4B49494338374449474847484D
484E514F4B4A4A48504B4644464A4F534F4D4D50504E4F52514B4D4F4A484A49
464848484A4E50504D4F4B77C2BCD0D6D3D1D8DADADECEA59A9A99989196ADBB
C2C5C1BEBBB8AC95806D6F6079C1D1D9DAE2DFDBD2BEACC7A24B4A4B4A4A4846
4C4847494946464949474545434143464648484645444A555F5E58443D46443B
42404042444342423B3E423F3C444B47474A4C4C494747474B4D
4B4C4B4F4B484D4C4C494646494D4C4A4B484B4B474A493E354248494B4A484C
4A5256524C4B4C4C4A4A494B4D5051514F504F4D4F52524F514A4C4F4B494B49
49494948494B4C4C504C476DBCAFC6D9D4D2D8DCDADCC49C999D9E99909AB4BC
C4C8C5C2BDB8AA927D706A79698BCCDCDDDDDFDDCCBFAEC099444A48494B4A49
44484B49494B4A464746474A49444141464848474642434A53575B5953433641
424243434342434640443E3841494845474A4D4C48454545494B
46494B504C484C4B4D4B48484C4F4E4B4846494945484A453940464B4F4F4D4E
4F52534E49494D4F4A4B4D4E4F504F4D51514B474C55534A4D4A4B4D4C4C4D4C
4948484A4A4B4C4E4C4A465799A8C4D9D6D4D8DDDBD8B7989A9F9F99929EB7BD
C5C8C6C4BFB7A891806F679A8875AEE0DED9DEDDC7BDB1B685464B4849494B4A
4344484C4C49484A454445494A4642413D464845484A47443C505855605C443B
4243454543414144484638344248454744464948464445464345
4547494D4B484D4B49484646484A49474747494A474849483D393C44484A4B4A
4E4E4D4B4A4A4B4B4D4E4D4B4A4B4C4B4D4E4A464B535148494B4A494C4E4D4E
4A48494C4C4A4C50494C4B4772A6C1D3D9D7D8DDDAD1AC989EA19D99949EB6C2
C6C8C5C5BFB5A6917C666388887B88CADEDADEDBC6BBB0AB6B494D4948454947
4844454B4B45464D48454344474848463B434543474A4744464043505F5A4743
4444454544424142473E373C4648484B44454746454444454446
4747464B4A4B53524C4C4C4A4A4B4B4A4B4A4C4D4C4A4948463A3A43464A4D4B
4A494A4E514E4945484B4C4A4A4B4B4B464C4D4A4B4F4E49494D4A474C4E4C4D
4E4A4A4D4A45454C504B4F4A64A2B9D2DCD9D8DDD9CCA499A5A49C99979DB6C9
C9C8C4C4BEB3A592776B5B5D697F80AEDCDDDED8C8BAAEA455494D4A48434947
484D4B4341474A474B4946474A4D4C4947454040424243494A3F404041474746
464443444443434444363B4B4C4A4C4A49494948464545464244
484A49494B4A4A504D4F4E4E504F4B4B4B4E4F4E4D484649483F3B393F48494C
4849505049494C484D4846494D4E4C4B494D4F4E4C4D4F50504B494C4F4C4A4B
4F4A4A4841434A4B4C4F534657A1B0D0DBDCDADBD7BF97A4A5A0A19998A2BEC8
C8CAC9C1B8B1A28F71655D5D6A78818FD3DEDED2C7B8B5904A4A4D4B44464B48
41494A494945444C4A4847494744484F494647443B3C4446484A48413D404446
48454243464341433E3A404B4E48474D494D48474E4B43464C4A
4B4C4B4B4C4B4C504B4B4947494A4A4C49494C4E4C49484840483F323F484147
4C484847464B4F4C49494B4E4F4E4C4D4C4D4E4E4D4D4F51504D4C4C4A47494C
49494A48444447485254524C4F90ACC8DBDCDBD8D5B39BA1A5A1A198949DBCCA
CBC9C5BCB5AFA08C6E5F565767767C86B1D8D9D1CBBBB28444494B47454A4C46
454544444848464649454345454344494F4A47464343423F4446484745444341
434145454043453E33383E4345464646494C4643494743474846
4B4C4D4E4E4C4D4F51504D4C4B4C4E504A474A4D49494B48455049363C49474A
4846484A4A4E4F4B4E4B4A4B4C4E4F514F4D4C4D4D4C4C4F53504D4C4A484A4D
474B4B48464445485257524F447CAFBFD8DCDBD5D0A3A1A0A6A3A1979198BCCC
D0C9C1B8B2AE9E896B59515465747A818ECAD5D0CBBAAE6E424B4B44464C4A44
48454342444747424945444749464444484B4B49484441434242444849464240
413E45453E4649373A414546474A4945484B47454947454A4442
494A4E514F4E4E4D4B4A4B4B49484A4A4E46484B45474B4747464D4336424B47
45494F504E4E4E4D524B46474D51514F4E4A494C4D4B4A4C54504C4C4E4E4C49
484E4A454645454B4F57554E3E67B2B8D1DCD9D3C499A6A3A7A5A1999398BECF
D1C8BEB4AEA99985685650556271798183B2D4D4CABDB15E444C4A43474A4848
4545484641464B474A48484C4D494544414849474845424745413F4243424345
42404142424843334242434547474645444A4A4A4C4A484B4947
4C4B4F514D4D4F4C4C4A4D504E4D4F4D4E46484B45474A4445404D4E3E3D4244
4E50504D4C4D4F524D4A494C51534E494A494A4D4F4D4C4D4E4D4C4D4F4F4B47
474C49444747484D5253544F4451A6B6CADCD5D1B697A5A6A8A5A09C989AC0CF
CDC5BCB2AAA39480665653575D6B77818590C7D2C4BEAE50474B48454746464D
4143484844484E4B4A48494B4A474646464641414949444447434141403F4145
4245424146423939444240414649484542484B4B4A4847494B49
524F514F494C514E504A4C504C4B4E4B4D484C4F4C4B4B46484A4B49483E3748
52514C494D4F4E4E4B4C4E4E4E4E4D4C484A4D5051515151484D51504D4C4A49
464A4B4A4C4D4D4E524A4D514F4392BBC5D9D1CAAA9DA3A8A8A6A09F9B9ABFCB
CAC3BBB1A79F907F67575658596574819685B1CFC6C19F474D4C49484541424A
4543454747494946494848474645474A454441424748474746464645423F3F40
424C4946463A3646494B474246504F4645484B4A464546494847
534F5150494D534F584F52565252544F4E4D4E50504E4C4B4B4E494249423540
4B4E4A4A50504A494D4E4E4B494B4D4E494F52504E4F5151495054504B4A4A4A
484A4D4E4E504F4A4C48485152427DBCBFD1CDBEA5A7A3AAAAA9A1A29C97BDC8
C6C0B8AFA49C8D7D665352545461727EA79594C5CCC78A454D4C4C4C46434343
474542454846434447474748484748494544464645464848444748474442413F
424A4A464036394A494B4843454C4B4446474A494544484A4B49
4E4B51514B4F554F4F464B535152544E50504E4D4D4B4A4E4D4E524E50514134
454C4B4A4D4C4A4D4B4C4B4B4C4D4A464B52554F4A4B4D4D4D50504C494A4946
4B494C4D4A4D4D44494F4A4E4F456FB4BBCACAB4A4AFA5ACADACA4A49C95BBC6
C3BCB4AAA0978979634D4A4E505E707BA29A71AEC4C0724048484D4E494A4A42
434341444844424A4344474B4B4947454E4645474748463C4446464443444442
4242434138353C444745454748484849424347484445494A4745
4C484946474F4E4A4C47484946494D49514B484947484845474A4B4A4B4C4439
3A484B4D4A4C49514F4F4D4D484D4B504B4E544A48524F4F4E4D4E494A4B484C
52484A4C504649504B4F4C494A4B52AFC2C0C2A5A0A8A5AFB0ABAAA99E95B8C3
C0B6B0A4A094887564595152565E6C7A7D866D8AC8BB56474A4844484A464542
4343454544484B47414745484B4848464648504F4A4A443F3F42454645444343
4A43463A2F3F4C454A4E4D48484846454547494D484347454745
4C484B47484F4E4B4E48494A474A4D494B484A4E4D4E4E4B4B4B4947494B4943
3C41424B4B4F4B4D4F4F4C4E4A4F4D50524E504D4F534D4D4F4D4C484A4D494D
4C474A494E4A4F524D4E4A494C4D4D9AC2BEB59A9FA8A9B2B0B0AD998B92B5BE
BEB6AFA19C918573645A5252555C6A787B7E6D79B9A74C434C49474A4B484644
4040424140444744464A45454746494946474C4A464644404142444544434344
4847443736404242484B48454748454241434448454147464442
4A494D49484F4E4B4E48494A484C4F4C4B494D504E4D4E4C504D4B4A4B4C4D4E
443C3D4D4F534E4A4E4D494D4C524E4E544C4E5253514B50504C4A464B4E4B4F
4B4B4D474C4C514E4F4C484B4D4F4780BFBCA78FA2AAAEB3B3B2AE8E7B8DAEBA
B9B3AD9D988D82736A605855555A68767A756C62A28F42434947484B4C494849
4545464644484B484B4E464445454A4A45464845414244414443444544424447
43463E3540463F4648494645494E4B4442444448444249494644
48494F4B494F4E4B4C46484A494E524F4E4C4D4D49484B4B524F4F514F4C4D51
4B3C3E52515450494D4C454C4D524E494B4A5055524B4C55504B49464A4E4C52
4E4E50484B4B4F4C4F4C494C4C4F446EBCBC9F8BA8ACB2B2B8AEAE907989A4BC
B3B1AA9A968B817570675E59565967757B6F6A5390833F4A4542474A4B4A494E
45454645444749474B4F484546454847454645423E3F45424543434544424448
42413A36454B434A484848474B5352494748484B47444B4B4947
%%EndData
end
Q
n
Q
Q
n
[/EMC PDFMark5
PDFVars/TermAll get exec end end
%%PageTrailer
%%Trailer
%%EOF
